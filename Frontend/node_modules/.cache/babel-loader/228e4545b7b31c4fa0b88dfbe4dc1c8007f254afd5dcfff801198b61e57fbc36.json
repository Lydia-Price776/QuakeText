{"ast":null,"code":"var _jsxFileName = \"/Users/lydiaprice/quake-text/Frontend/src/MapComponents/BaseMap.js\",\n  _s = $RefreshSig$();\nimport './MapStyle.css';\nimport React, { useEffect, useRef, useState } from 'react';\nimport 'ol/ol.css';\nimport GeoJSON from 'ol/format/GeoJSON';\nimport Map from 'ol/Map';\nimport VectorSource from 'ol/source/Vector';\nimport View from 'ol/View';\nimport { bbox as bboxStrategy } from 'ol/loadingstrategy';\nimport 'ol/ol.css';\nimport OSM from 'ol/source/OSM';\nimport { Stroke, Style } from 'ol/style';\nimport { Tile as TileLayer, Vector as VectorLayer } from 'ol/layer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst base = new TileLayer({\n  source: new OSM()\n});\nconst vectorSource = new VectorSource({\n  format: new GeoJSON(),\n  url: function (extent) {\n    return 'http://localhost:8081/geoserver/ows?service=WFS&' + 'version=1.1.0&request=GetFeature&typeName=topp:states&' + 'maxfeatures=50&outputformat=json&srsname=EPSG:4326&' + 'bbox=' + extent.join(',') + ',EPSG:4326';\n  },\n  strategy: bboxStrategy\n});\nconst vector = new VectorLayer({\n  source: vectorSource,\n  style: new Style({\n    stroke: new Stroke({\n      color: 'rgba(0, 0, 255, 1.0)',\n      width: 2\n    })\n  })\n});\nfunction BaseMap() {\n  _s();\n  const [map, setMap] = useState();\n  const mapElement = useRef();\n  const mapRef = useRef();\n  mapRef.current = map;\n  useEffect(() => {\n    const initialMap = new Map({\n      target: mapElement.current,\n      layers: [base, vector],\n      view: new View({\n        center: [0, 0],\n        zoom: 5,\n        minZoom: 2,\n        maxZoom: 18\n      })\n    });\n    setMap(initialMap);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mapElement,\n    className: \"map-container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n_s(BaseMap, \"8FmeBkcR4oMmMG6qiK2ae38A6sU=\");\n_c = BaseMap;\nexport default BaseMap;\nvar _c;\n$RefreshReg$(_c, \"BaseMap\");","map":{"version":3,"names":["React","useEffect","useRef","useState","GeoJSON","Map","VectorSource","View","bbox","bboxStrategy","OSM","Stroke","Style","Tile","TileLayer","Vector","VectorLayer","base","source","vectorSource","format","url","extent","join","strategy","vector","style","stroke","color","width","BaseMap","map","setMap","mapElement","mapRef","current","initialMap","target","layers","view","center","zoom","minZoom","maxZoom"],"sources":["/Users/lydiaprice/quake-text/Frontend/src/MapComponents/BaseMap.js"],"sourcesContent":["import './MapStyle.css';\nimport React, {useEffect, useRef, useState} from 'react';\nimport 'ol/ol.css';\nimport GeoJSON from 'ol/format/GeoJSON';\nimport Map from 'ol/Map';\nimport VectorSource from 'ol/source/Vector';\nimport View from 'ol/View';\nimport {bbox as bboxStrategy} from 'ol/loadingstrategy';\nimport 'ol/ol.css';\nimport OSM from 'ol/source/OSM';\nimport {Stroke, Style} from 'ol/style';\nimport {Tile as TileLayer, Vector as VectorLayer} from 'ol/layer';\n\n\nconst base = new TileLayer({\n    source: new OSM(),\n});\n\n\nconst vectorSource = new VectorSource({\n    format: new GeoJSON(),\n    url: function(extent) {\n        return 'http://localhost:8081/geoserver/ows?service=WFS&' +\n            'version=1.1.0&request=GetFeature&typeName=topp:states&' +\n            'maxfeatures=50&outputformat=json&srsname=EPSG:4326&' +\n            'bbox=' + extent.join(',') + ',EPSG:4326';\n    },\n    strategy: bboxStrategy,\n});\n\n\nconst vector = new VectorLayer({\n    source: vectorSource,\n    style: new Style({\n        stroke: new Stroke({\n            color: 'rgba(0, 0, 255, 1.0)',\n            width: 2,\n        }),\n    }),\n});\nfunction BaseMap() {\n    const [map, setMap] = useState();\n    const mapElement = useRef();\n    const mapRef = useRef();\n    mapRef.current = map;\n\n    useEffect(() => {\n        const initialMap = new Map({\n            target: mapElement.current,\n            layers: [base, vector],\n            view: new View({\n                center: [0, 0],\n                zoom: 5,\n                minZoom: 2,\n                maxZoom: 18,\n            }),\n        });\n        setMap(initialMap)\n    }, []);\n    return (\n        <div ref={mapElement} className=\"map-container\"/>\n    );\n}\n\nexport default BaseMap;\n"],"mappings":";;AAAA,OAAO,gBAAgB;AACvB,OAAOA,KAAK,IAAGC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAO,OAAO;AACxD,OAAO,WAAW;AAClB,OAAOC,OAAO,MAAM,mBAAmB;AACvC,OAAOC,GAAG,MAAM,QAAQ;AACxB,OAAOC,YAAY,MAAM,kBAAkB;AAC3C,OAAOC,IAAI,MAAM,SAAS;AAC1B,SAAQC,IAAI,IAAIC,YAAY,QAAO,oBAAoB;AACvD,OAAO,WAAW;AAClB,OAAOC,GAAG,MAAM,eAAe;AAC/B,SAAQC,MAAM,EAAEC,KAAK,QAAO,UAAU;AACtC,SAAQC,IAAI,IAAIC,SAAS,EAAEC,MAAM,IAAIC,WAAW,QAAO,UAAU;AAAC;AAGlE,MAAMC,IAAI,GAAG,IAAIH,SAAS,CAAC;EACvBI,MAAM,EAAE,IAAIR,GAAG;AACnB,CAAC,CAAC;AAGF,MAAMS,YAAY,GAAG,IAAIb,YAAY,CAAC;EAClCc,MAAM,EAAE,IAAIhB,OAAO,EAAE;EACrBiB,GAAG,EAAE,UAASC,MAAM,EAAE;IAClB,OAAO,kDAAkD,GACrD,wDAAwD,GACxD,qDAAqD,GACrD,OAAO,GAAGA,MAAM,CAACC,IAAI,CAAC,GAAG,CAAC,GAAG,YAAY;EACjD,CAAC;EACDC,QAAQ,EAAEf;AACd,CAAC,CAAC;AAGF,MAAMgB,MAAM,GAAG,IAAIT,WAAW,CAAC;EAC3BE,MAAM,EAAEC,YAAY;EACpBO,KAAK,EAAE,IAAId,KAAK,CAAC;IACbe,MAAM,EAAE,IAAIhB,MAAM,CAAC;MACfiB,KAAK,EAAE,sBAAsB;MAC7BC,KAAK,EAAE;IACX,CAAC;EACL,CAAC;AACL,CAAC,CAAC;AACF,SAASC,OAAO,GAAG;EAAA;EACf,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAG7B,QAAQ,EAAE;EAChC,MAAM8B,UAAU,GAAG/B,MAAM,EAAE;EAC3B,MAAMgC,MAAM,GAAGhC,MAAM,EAAE;EACvBgC,MAAM,CAACC,OAAO,GAAGJ,GAAG;EAEpB9B,SAAS,CAAC,MAAM;IACZ,MAAMmC,UAAU,GAAG,IAAI/B,GAAG,CAAC;MACvBgC,MAAM,EAAEJ,UAAU,CAACE,OAAO;MAC1BG,MAAM,EAAE,CAACrB,IAAI,EAAEQ,MAAM,CAAC;MACtBc,IAAI,EAAE,IAAIhC,IAAI,CAAC;QACXiC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;QACdC,IAAI,EAAE,CAAC;QACPC,OAAO,EAAE,CAAC;QACVC,OAAO,EAAE;MACb,CAAC;IACL,CAAC,CAAC;IACFX,MAAM,CAACI,UAAU,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EACN,oBACI;IAAK,GAAG,EAAEH,UAAW;IAAC,SAAS,EAAC;EAAe;IAAA;IAAA;IAAA;EAAA,QAAE;AAEzD;AAAC,GAtBQH,OAAO;AAAA,KAAPA,OAAO;AAwBhB,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}