{"ast":null,"code":"import './MapStyle.css';\nimport React, { useEffect, useRef, useState } from 'react';\nimport 'ol/ol.css';\nimport TileWMS from 'ol/source/TileWMS';\nimport Map from 'ol/Map';\nimport View from 'ol/View';\nimport 'ol/ol.css';\nimport OSM from 'ol/source/OSM';\nimport { Group, Tile as TileLayer } from 'ol/layer';\nimport { ImageWMS } from \"ol/source\";\nimport { Overlay } from \"ol\";\nfunction BaseMap() {\n  const container = document.getElementById('popup');\n  const base = new TileLayer({\n    source: new OSM()\n  });\n  const view = new View({\n    projection: 'EPSG:4326',\n    center: [78.0, 23.0],\n    zoom: 5\n  });\n  const overlay = new Overlay({\n    element: container,\n    autoPan: true,\n    autoPanAnimation: {\n      duration: 250\n    }\n  });\n  const base_maps = new Group({\n    'title': 'Base maps',\n    layers: [new TileLayer({\n      title: 'OSM',\n      type: 'base',\n      visible: true,\n      source: new OSM()\n    })]\n  });\n  const overlays = new Group({\n    'title': 'Overlays',\n    layers: [new Image({\n      title: 'aus1',\n      // extent: [-180, -90, -180, 90],\n      source: new ImageWMS({\n        url: 'http://localhost:8080/geoserver/wms',\n        params: {\n          'LAYERS': 'aussie:aus1'\n        },\n        ratio: 1,\n        serverType: 'geoserver'\n      })\n    }), new Image({\n      title: 'aus2',\n      // extent: [-180, -90, -180, 90],\n      source: new ImageWMS({\n        url: 'http://localhost:8080/geoserver/wms',\n        params: {\n          'LAYERS': 'aussie:aus2'\n        },\n        ratio: 1,\n        serverType: 'geoserver'\n      })\n    }), new Image({\n      title: 'aus3',\n      // extent: [-180, -90, -180, 90],\n      source: new ImageWMS({\n        url: 'http://localhost:8080/geoserver/wms',\n        params: {\n          'LAYERS': 'aussie:aus3'\n        },\n        ratio: 1,\n        serverType: 'geoserver'\n      })\n    })]\n  });\n  let map = new Map({\n    target: 'map',\n    view: view,\n    overlays: [overlay]\n  });\n  map.addLayer(base_maps);\n  map.addLayer(overlays);\n}\n\n/*\nfunction BaseMap() {\n    const [map, setMap] = useState();\n    const mapElement = useRef();\n    const mapRef = useRef();\n    mapRef.current = map;\n\n    useEffect(() => {\n        const initialMap = new Map({\n            target: mapElement.current,\n            layers: [base, layer],\n            view: new View({\n                center: [0, 0],\n                zoom: 5,\n                minZoom: 2,\n                maxZoom: 18,\n            }),\n        });\n        setMap(initialMap)\n    }, []);\n    return (\n        <div ref={mapElement} className=\"map-container\"/>\n    );\n}\n*/\n_c = BaseMap;\nexport default BaseMap;\nvar _c;\n$RefreshReg$(_c, \"BaseMap\");","map":{"version":3,"names":["React","useEffect","useRef","useState","TileWMS","Map","View","OSM","Group","Tile","TileLayer","ImageWMS","Overlay","BaseMap","container","document","getElementById","base","source","view","projection","center","zoom","overlay","element","autoPan","autoPanAnimation","duration","base_maps","layers","title","type","visible","overlays","Image","url","params","ratio","serverType","map","target","addLayer"],"sources":["/Users/lydiaprice/quake-text/Frontend/src/MapComponents/BaseMap.js"],"sourcesContent":["import './MapStyle.css';\nimport React, {useEffect, useRef, useState} from 'react';\nimport 'ol/ol.css';\nimport TileWMS from 'ol/source/TileWMS';\nimport Map from 'ol/Map';\nimport View from 'ol/View';\nimport 'ol/ol.css';\nimport OSM from 'ol/source/OSM';\nimport {Group, Tile as TileLayer} from 'ol/layer';\nimport {ImageWMS} from \"ol/source\";\nimport {Overlay} from \"ol\";\n\nfunction BaseMap() {\n\n    const container = document.getElementById('popup');\n\n    const base = new TileLayer({\n        source: new OSM(),\n    });\n\n    const view = new View({\n        projection: 'EPSG:4326',\n        center: [78.0, 23.0],\n        zoom: 5,\n\n    });\n\n    const overlay = new Overlay({\n        element: container,\n        autoPan: true,\n        autoPanAnimation: {\n            duration: 250\n        }\n    });\n\n    const base_maps = new Group({\n        'title': 'Base maps',\n        layers: [\n            new TileLayer({\n                title: 'OSM',\n                type: 'base',\n                visible: true,\n                source: new OSM()\n            })\n        ]\n    });\n\n\n    const overlays = new Group({\n        'title': 'Overlays',\n        layers: [\n            new Image({\n                title: 'aus1',\n                // extent: [-180, -90, -180, 90],\n                source: new ImageWMS({\n                    url: 'http://localhost:8080/geoserver/wms',\n                    params: {'LAYERS': 'aussie:aus1'},\n                    ratio: 1,\n                    serverType: 'geoserver'\n                })\n            }),\n            new Image({\n                title: 'aus2',\n                // extent: [-180, -90, -180, 90],\n                source: new ImageWMS({\n                    url: 'http://localhost:8080/geoserver/wms',\n                    params: {'LAYERS': 'aussie:aus2'},\n                    ratio: 1,\n                    serverType: 'geoserver'\n                })\n            }),\n            new Image({\n                title: 'aus3',\n                // extent: [-180, -90, -180, 90],\n                source: new ImageWMS({\n                    url: 'http://localhost:8080/geoserver/wms',\n                    params: {'LAYERS': 'aussie:aus3'},\n                    ratio: 1,\n                    serverType: 'geoserver'\n                })\n            })\n\n        ]\n    });\n\n\n    let map = new Map({\n        target: 'map',\n        view: view,\n        overlays: [overlay]\n    });\n\n    map.addLayer(base_maps);\n    map.addLayer(overlays);\n}\n\n/*\nfunction BaseMap() {\n    const [map, setMap] = useState();\n    const mapElement = useRef();\n    const mapRef = useRef();\n    mapRef.current = map;\n\n    useEffect(() => {\n        const initialMap = new Map({\n            target: mapElement.current,\n            layers: [base, layer],\n            view: new View({\n                center: [0, 0],\n                zoom: 5,\n                minZoom: 2,\n                maxZoom: 18,\n            }),\n        });\n        setMap(initialMap)\n    }, []);\n    return (\n        <div ref={mapElement} className=\"map-container\"/>\n    );\n}\n*/\nexport default BaseMap;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}