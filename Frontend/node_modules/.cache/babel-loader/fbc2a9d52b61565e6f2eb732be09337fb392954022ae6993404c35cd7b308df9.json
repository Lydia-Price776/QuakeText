{"ast":null,"code":"/* eslint-disable no-restricted-globals, no-restricted-syntax */\n/* global SharedArrayBuffer */\n\nimport { CANNOT_CONVERT_UNDEFINED_OR_NULL_TO_OBJECT } from \"./messages.mjs\";\n\n/** @type {<T extends (...args: any) => any>(target: T) => (thisArg: ThisType<T>, ...args: any[]) => any} */\nfunction uncurryThis(target) {\n  return function (thisArg) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    return ReflectApply(target, thisArg, args);\n  };\n}\n\n/** @type {(target: any, key: string | symbol) => (thisArg: any, ...args: any[]) => any} */\nfunction uncurryThisGetter(target, key) {\n  return uncurryThis(ReflectGetOwnPropertyDescriptor(target, key).get);\n}\n\n// Reflect\nexport const {\n  apply: ReflectApply,\n  construct: ReflectConstruct,\n  defineProperty: ReflectDefineProperty,\n  get: ReflectGet,\n  getOwnPropertyDescriptor: ReflectGetOwnPropertyDescriptor,\n  getPrototypeOf: ReflectGetPrototypeOf,\n  has: ReflectHas,\n  ownKeys: ReflectOwnKeys,\n  set: ReflectSet,\n  setPrototypeOf: ReflectSetPrototypeOf\n} = Reflect;\n\n// Proxy\nexport const NativeProxy = Proxy;\n\n// Number\nexport const {\n  MAX_SAFE_INTEGER: MAX_SAFE_INTEGER,\n  isFinite: NumberIsFinite,\n  isNaN: NumberIsNaN\n} = Number;\n\n// Symbol\nexport const {\n  iterator: SymbolIterator,\n  species: SymbolSpecies,\n  toStringTag: SymbolToStringTag,\n  for: SymbolFor\n} = Symbol;\n\n// Object\nexport const NativeObject = Object;\nexport const {\n  create: ObjectCreate,\n  defineProperty: ObjectDefineProperty,\n  freeze: ObjectFreeze,\n  is: ObjectIs\n} = NativeObject;\nconst ObjectPrototype = NativeObject.prototype;\n/** @type {(object: object, key: PropertyKey) => Function | undefined} */\nexport const ObjectPrototype__lookupGetter__ = /** @type {any} */ObjectPrototype.__lookupGetter__ ? uncurryThis( /** @type {any} */ObjectPrototype.__lookupGetter__) : (object, key) => {\n  if (object == null) {\n    throw NativeTypeError(CANNOT_CONVERT_UNDEFINED_OR_NULL_TO_OBJECT);\n  }\n  let target = NativeObject(object);\n  do {\n    const descriptor = ReflectGetOwnPropertyDescriptor(target, key);\n    if (descriptor !== undefined) {\n      if (ObjectHasOwn(descriptor, \"get\")) {\n        return descriptor.get;\n      }\n      return;\n    }\n  } while ((target = ReflectGetPrototypeOf(target)) !== null);\n};\n/** @type {(object: object, key: PropertyKey) => boolean} */\nexport const ObjectHasOwn = /** @type {any} */NativeObject.hasOwn || uncurryThis(ObjectPrototype.hasOwnProperty);\n\n// Array\nconst NativeArray = Array;\nexport const ArrayIsArray = NativeArray.isArray;\nconst ArrayPrototype = NativeArray.prototype;\n/** @type {(array: ArrayLike<unknown>, separator?: string) => string} */\nexport const ArrayPrototypeJoin = uncurryThis(ArrayPrototype.join);\n/** @type {<T>(array: T[], ...items: T[]) => number} */\nexport const ArrayPrototypePush = uncurryThis(ArrayPrototype.push);\n/** @type {(array: ArrayLike<unknown>, ...opts: any[]) => string} */\nexport const ArrayPrototypeToLocaleString = uncurryThis(ArrayPrototype.toLocaleString);\nexport const NativeArrayPrototypeSymbolIterator = ArrayPrototype[SymbolIterator];\n/** @type {<T>(array: T[]) => IterableIterator<T>} */\nexport const ArrayPrototypeSymbolIterator = uncurryThis(NativeArrayPrototypeSymbolIterator);\n\n// Math\nexport const MathTrunc = Math.trunc;\n\n// ArrayBuffer\nexport const NativeArrayBuffer = ArrayBuffer;\nexport const ArrayBufferIsView = NativeArrayBuffer.isView;\nconst ArrayBufferPrototype = NativeArrayBuffer.prototype;\n/** @type {(buffer: ArrayBuffer, begin?: number, end?: number) => number} */\nexport const ArrayBufferPrototypeSlice = uncurryThis(ArrayBufferPrototype.slice);\n/** @type {(buffer: ArrayBuffer) => ArrayBuffer} */\nexport const ArrayBufferPrototypeGetByteLength = uncurryThisGetter(ArrayBufferPrototype, \"byteLength\");\n\n// SharedArrayBuffer\nexport const NativeSharedArrayBuffer = typeof SharedArrayBuffer !== \"undefined\" ? SharedArrayBuffer : null;\n/** @type {(buffer: SharedArrayBuffer) => SharedArrayBuffer} */\nexport const SharedArrayBufferPrototypeGetByteLength = NativeSharedArrayBuffer && uncurryThisGetter(NativeSharedArrayBuffer.prototype, \"byteLength\");\n\n// TypedArray\n/** @typedef {Uint8Array|Uint8ClampedArray|Uint16Array|Uint32Array|Int8Array|Int16Array|Int32Array|Float32Array|Float64Array|BigUint64Array|BigInt64Array} TypedArray */\n/** @type {any} */\nexport const TypedArray = ReflectGetPrototypeOf(Uint8Array);\nconst TypedArrayFrom = TypedArray.from;\nexport const TypedArrayPrototype = TypedArray.prototype;\nexport const NativeTypedArrayPrototypeSymbolIterator = TypedArrayPrototype[SymbolIterator];\n/** @type {(typedArray: TypedArray) => IterableIterator<number>} */\nexport const TypedArrayPrototypeKeys = uncurryThis(TypedArrayPrototype.keys);\n/** @type {(typedArray: TypedArray) => IterableIterator<number>} */\nexport const TypedArrayPrototypeValues = uncurryThis(TypedArrayPrototype.values);\n/** @type {(typedArray: TypedArray) => IterableIterator<[number, number]>} */\nexport const TypedArrayPrototypeEntries = uncurryThis(TypedArrayPrototype.entries);\n/** @type {(typedArray: TypedArray, array: ArrayLike<number>, offset?: number) => void} */\nexport const TypedArrayPrototypeSet = uncurryThis(TypedArrayPrototype.set);\n/** @type {<T extends TypedArray>(typedArray: T) => T} */\nexport const TypedArrayPrototypeReverse = uncurryThis(TypedArrayPrototype.reverse);\n/** @type {<T extends TypedArray>(typedArray: T, value: number, start?: number, end?: number) => T} */\nexport const TypedArrayPrototypeFill = uncurryThis(TypedArrayPrototype.fill);\n/** @type {<T extends TypedArray>(typedArray: T, target: number, start: number, end?: number) => T} */\nexport const TypedArrayPrototypeCopyWithin = uncurryThis(TypedArrayPrototype.copyWithin);\n/** @type {<T extends TypedArray>(typedArray: T, compareFn?: (a: number, b: number) => number) => T} */\nexport const TypedArrayPrototypeSort = uncurryThis(TypedArrayPrototype.sort);\n/** @type {<T extends TypedArray>(typedArray: T, start?: number, end?: number) => T} */\nexport const TypedArrayPrototypeSlice = uncurryThis(TypedArrayPrototype.slice);\n/** @type {<T extends TypedArray>(typedArray: T, start?: number, end?: number) => T} */\nexport const TypedArrayPrototypeSubarray = uncurryThis(TypedArrayPrototype.subarray);\n/** @type {((typedArray: TypedArray) => ArrayBuffer)} */\nexport const TypedArrayPrototypeGetBuffer = uncurryThisGetter(TypedArrayPrototype, \"buffer\");\n/** @type {((typedArray: TypedArray) => number)} */\nexport const TypedArrayPrototypeGetByteOffset = uncurryThisGetter(TypedArrayPrototype, \"byteOffset\");\n/** @type {((typedArray: TypedArray) => number)} */\nexport const TypedArrayPrototypeGetLength = uncurryThisGetter(TypedArrayPrototype, \"length\");\n/** @type {(target: unknown) => string} */\nexport const TypedArrayPrototypeGetSymbolToStringTag = uncurryThisGetter(TypedArrayPrototype, SymbolToStringTag);\n\n// Uint16Array\nexport const NativeUint16Array = Uint16Array;\n/** @type {Uint16ArrayConstructor[\"from\"]} */\nexport const Uint16ArrayFrom = function () {\n  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n  return ReflectApply(TypedArrayFrom, NativeUint16Array, args);\n};\n\n// Uint32Array\nexport const NativeUint32Array = Uint32Array;\n\n// Float32Array\nexport const NativeFloat32Array = Float32Array;\n\n// ArrayIterator\n/** @type {any} */\nexport const ArrayIteratorPrototype = ReflectGetPrototypeOf([][SymbolIterator]());\n/** @type {<T>(arrayIterator: IterableIterator<T>) => IteratorResult<T>} */\nexport const ArrayIteratorPrototypeNext = uncurryThis(ArrayIteratorPrototype.next);\n\n// Generator\n/** @type {<T = unknown, TReturn = any, TNext = unknown>(generator: Generator<T, TReturn, TNext>, value?: TNext) => T} */\nexport const GeneratorPrototypeNext = uncurryThis(function* () {}().next);\n\n// Iterator\nexport const IteratorPrototype = ReflectGetPrototypeOf(ArrayIteratorPrototype);\n\n// DataView\nconst DataViewPrototype = DataView.prototype;\n/** @type {(dataView: DataView, byteOffset: number, littleEndian?: boolean) => number} */\nexport const DataViewPrototypeGetUint16 = uncurryThis(DataViewPrototype.getUint16);\n/** @type {(dataView: DataView, byteOffset: number, value: number, littleEndian?: boolean) => void} */\nexport const DataViewPrototypeSetUint16 = uncurryThis(DataViewPrototype.setUint16);\n\n// Error\nexport const NativeTypeError = TypeError;\nexport const NativeRangeError = RangeError;\n\n// WeakSet\n/**\n * Do not construct with arguments to avoid calling the \"add\" method\n *\n * @type {{new <T extends {}>(): WeakSet<T>}}\n */\nexport const NativeWeakSet = WeakSet;\nconst WeakSetPrototype = NativeWeakSet.prototype;\n/** @type {<T extends {}>(set: WeakSet<T>, value: T) => Set<T>} */\nexport const WeakSetPrototypeAdd = uncurryThis(WeakSetPrototype.add);\n/** @type {<T extends {}>(set: WeakSet<T>, value: T) => boolean} */\nexport const WeakSetPrototypeHas = uncurryThis(WeakSetPrototype.has);\n\n// WeakMap\n/**\n * Do not construct with arguments to avoid calling the \"set\" method\n *\n * @type {{new <K extends {}, V>(): WeakMap<K, V>}}\n */\nexport const NativeWeakMap = WeakMap;\nconst WeakMapPrototype = NativeWeakMap.prototype;\n/** @type {<K extends {}, V>(weakMap: WeakMap<K, V>, key: K) => V} */\nexport const WeakMapPrototypeGet = uncurryThis(WeakMapPrototype.get);\n/** @type {<K extends {}, V>(weakMap: WeakMap<K, V>, key: K) => boolean} */\nexport const WeakMapPrototypeHas = uncurryThis(WeakMapPrototype.has);\n/** @type {<K extends {}, V>(weakMap: WeakMap<K, V>, key: K, value: V) => WeakMap} */\nexport const WeakMapPrototypeSet = uncurryThis(WeakMapPrototype.set);","map":{"version":3,"names":["CANNOT_CONVERT_UNDEFINED_OR_NULL_TO_OBJECT","uncurryThis","target","thisArg","args","ReflectApply","uncurryThisGetter","key","ReflectGetOwnPropertyDescriptor","get","apply","construct","ReflectConstruct","defineProperty","ReflectDefineProperty","ReflectGet","getOwnPropertyDescriptor","getPrototypeOf","ReflectGetPrototypeOf","has","ReflectHas","ownKeys","ReflectOwnKeys","set","ReflectSet","setPrototypeOf","ReflectSetPrototypeOf","Reflect","NativeProxy","Proxy","MAX_SAFE_INTEGER","isFinite","NumberIsFinite","isNaN","NumberIsNaN","Number","iterator","SymbolIterator","species","SymbolSpecies","toStringTag","SymbolToStringTag","for","SymbolFor","Symbol","NativeObject","Object","create","ObjectCreate","ObjectDefineProperty","freeze","ObjectFreeze","is","ObjectIs","ObjectPrototype","prototype","ObjectPrototype__lookupGetter__","__lookupGetter__","object","NativeTypeError","descriptor","undefined","ObjectHasOwn","hasOwn","hasOwnProperty","NativeArray","Array","ArrayIsArray","isArray","ArrayPrototype","ArrayPrototypeJoin","join","ArrayPrototypePush","push","ArrayPrototypeToLocaleString","toLocaleString","NativeArrayPrototypeSymbolIterator","ArrayPrototypeSymbolIterator","MathTrunc","Math","trunc","NativeArrayBuffer","ArrayBuffer","ArrayBufferIsView","isView","ArrayBufferPrototype","ArrayBufferPrototypeSlice","slice","ArrayBufferPrototypeGetByteLength","NativeSharedArrayBuffer","SharedArrayBuffer","SharedArrayBufferPrototypeGetByteLength","TypedArray","Uint8Array","TypedArrayFrom","from","TypedArrayPrototype","NativeTypedArrayPrototypeSymbolIterator","TypedArrayPrototypeKeys","keys","TypedArrayPrototypeValues","values","TypedArrayPrototypeEntries","entries","TypedArrayPrototypeSet","TypedArrayPrototypeReverse","reverse","TypedArrayPrototypeFill","fill","TypedArrayPrototypeCopyWithin","copyWithin","TypedArrayPrototypeSort","sort","TypedArrayPrototypeSlice","TypedArrayPrototypeSubarray","subarray","TypedArrayPrototypeGetBuffer","TypedArrayPrototypeGetByteOffset","TypedArrayPrototypeGetLength","TypedArrayPrototypeGetSymbolToStringTag","NativeUint16Array","Uint16Array","Uint16ArrayFrom","NativeUint32Array","Uint32Array","NativeFloat32Array","Float32Array","ArrayIteratorPrototype","ArrayIteratorPrototypeNext","next","GeneratorPrototypeNext","IteratorPrototype","DataViewPrototype","DataView","DataViewPrototypeGetUint16","getUint16","DataViewPrototypeSetUint16","setUint16","TypeError","NativeRangeError","RangeError","NativeWeakSet","WeakSet","WeakSetPrototype","WeakSetPrototypeAdd","add","WeakSetPrototypeHas","NativeWeakMap","WeakMap","WeakMapPrototype","WeakMapPrototypeGet","WeakMapPrototypeHas","WeakMapPrototypeSet"],"sources":["/Users/lydiaprice/quake-text/node_modules/@petamoriken/float16/src/_util/primordials.mjs"],"sourcesContent":["/* eslint-disable no-restricted-globals, no-restricted-syntax */\n/* global SharedArrayBuffer */\n\nimport { CANNOT_CONVERT_UNDEFINED_OR_NULL_TO_OBJECT } from \"./messages.mjs\";\n\n/** @type {<T extends (...args: any) => any>(target: T) => (thisArg: ThisType<T>, ...args: any[]) => any} */\nfunction uncurryThis(target) {\n  return (thisArg, ...args) => {\n    return ReflectApply(target, thisArg, args);\n  };\n}\n\n/** @type {(target: any, key: string | symbol) => (thisArg: any, ...args: any[]) => any} */\nfunction uncurryThisGetter(target, key) {\n  return uncurryThis(\n    ReflectGetOwnPropertyDescriptor(\n      target,\n      key\n    ).get\n  );\n}\n\n// Reflect\nexport const {\n  apply: ReflectApply,\n  construct: ReflectConstruct,\n  defineProperty: ReflectDefineProperty,\n  get: ReflectGet,\n  getOwnPropertyDescriptor: ReflectGetOwnPropertyDescriptor,\n  getPrototypeOf: ReflectGetPrototypeOf,\n  has: ReflectHas,\n  ownKeys: ReflectOwnKeys,\n  set: ReflectSet,\n  setPrototypeOf: ReflectSetPrototypeOf,\n} = Reflect;\n\n// Proxy\nexport const NativeProxy = Proxy;\n\n// Number\nexport const {\n  MAX_SAFE_INTEGER: MAX_SAFE_INTEGER,\n  isFinite: NumberIsFinite,\n  isNaN: NumberIsNaN,\n} = Number;\n\n// Symbol\nexport const {\n  iterator: SymbolIterator,\n  species: SymbolSpecies,\n  toStringTag: SymbolToStringTag,\n  for: SymbolFor,\n} = Symbol;\n\n// Object\nexport const NativeObject = Object;\nexport const {\n  create: ObjectCreate,\n  defineProperty: ObjectDefineProperty,\n  freeze: ObjectFreeze,\n  is: ObjectIs,\n} = NativeObject;\nconst ObjectPrototype = NativeObject.prototype;\n/** @type {(object: object, key: PropertyKey) => Function | undefined} */\nexport const ObjectPrototype__lookupGetter__ = /** @type {any} */ (ObjectPrototype).__lookupGetter__\n  ? uncurryThis(/** @type {any} */ (ObjectPrototype).__lookupGetter__)\n  : (object, key) => {\n    if (object == null) {\n      throw NativeTypeError(\n        CANNOT_CONVERT_UNDEFINED_OR_NULL_TO_OBJECT\n      );\n    }\n\n    let target = NativeObject(object);\n    do {\n      const descriptor = ReflectGetOwnPropertyDescriptor(target, key);\n      if (descriptor !== undefined) {\n        if (ObjectHasOwn(descriptor, \"get\")) {\n          return descriptor.get;\n        }\n\n        return;\n      }\n    } while ((target = ReflectGetPrototypeOf(target)) !== null);\n  };\n/** @type {(object: object, key: PropertyKey) => boolean} */\nexport const ObjectHasOwn = /** @type {any} */ (NativeObject).hasOwn ||\n  uncurryThis(ObjectPrototype.hasOwnProperty);\n\n// Array\nconst NativeArray = Array;\nexport const ArrayIsArray = NativeArray.isArray;\nconst ArrayPrototype = NativeArray.prototype;\n/** @type {(array: ArrayLike<unknown>, separator?: string) => string} */\nexport const ArrayPrototypeJoin = uncurryThis(ArrayPrototype.join);\n/** @type {<T>(array: T[], ...items: T[]) => number} */\nexport const ArrayPrototypePush = uncurryThis(ArrayPrototype.push);\n/** @type {(array: ArrayLike<unknown>, ...opts: any[]) => string} */\nexport const ArrayPrototypeToLocaleString = uncurryThis(\n  ArrayPrototype.toLocaleString\n);\nexport const NativeArrayPrototypeSymbolIterator = ArrayPrototype[SymbolIterator];\n/** @type {<T>(array: T[]) => IterableIterator<T>} */\nexport const ArrayPrototypeSymbolIterator = uncurryThis(NativeArrayPrototypeSymbolIterator);\n\n// Math\nexport const MathTrunc = Math.trunc;\n\n// ArrayBuffer\nexport const NativeArrayBuffer = ArrayBuffer;\nexport const ArrayBufferIsView = NativeArrayBuffer.isView;\nconst ArrayBufferPrototype = NativeArrayBuffer.prototype;\n/** @type {(buffer: ArrayBuffer, begin?: number, end?: number) => number} */\nexport const ArrayBufferPrototypeSlice = uncurryThis(ArrayBufferPrototype.slice);\n/** @type {(buffer: ArrayBuffer) => ArrayBuffer} */\nexport const ArrayBufferPrototypeGetByteLength = uncurryThisGetter(ArrayBufferPrototype, \"byteLength\");\n\n// SharedArrayBuffer\nexport const NativeSharedArrayBuffer = typeof SharedArrayBuffer !== \"undefined\" ? SharedArrayBuffer : null;\n/** @type {(buffer: SharedArrayBuffer) => SharedArrayBuffer} */\nexport const SharedArrayBufferPrototypeGetByteLength = NativeSharedArrayBuffer\n  && uncurryThisGetter(NativeSharedArrayBuffer.prototype, \"byteLength\");\n\n// TypedArray\n/** @typedef {Uint8Array|Uint8ClampedArray|Uint16Array|Uint32Array|Int8Array|Int16Array|Int32Array|Float32Array|Float64Array|BigUint64Array|BigInt64Array} TypedArray */\n/** @type {any} */\nexport const TypedArray = ReflectGetPrototypeOf(Uint8Array);\nconst TypedArrayFrom = TypedArray.from;\nexport const TypedArrayPrototype = TypedArray.prototype;\nexport const NativeTypedArrayPrototypeSymbolIterator = TypedArrayPrototype[SymbolIterator];\n/** @type {(typedArray: TypedArray) => IterableIterator<number>} */\nexport const TypedArrayPrototypeKeys = uncurryThis(TypedArrayPrototype.keys);\n/** @type {(typedArray: TypedArray) => IterableIterator<number>} */\nexport const TypedArrayPrototypeValues = uncurryThis(\n  TypedArrayPrototype.values\n);\n/** @type {(typedArray: TypedArray) => IterableIterator<[number, number]>} */\nexport const TypedArrayPrototypeEntries = uncurryThis(\n  TypedArrayPrototype.entries\n);\n/** @type {(typedArray: TypedArray, array: ArrayLike<number>, offset?: number) => void} */\nexport const TypedArrayPrototypeSet = uncurryThis(TypedArrayPrototype.set);\n/** @type {<T extends TypedArray>(typedArray: T) => T} */\nexport const TypedArrayPrototypeReverse = uncurryThis(\n  TypedArrayPrototype.reverse\n);\n/** @type {<T extends TypedArray>(typedArray: T, value: number, start?: number, end?: number) => T} */\nexport const TypedArrayPrototypeFill = uncurryThis(TypedArrayPrototype.fill);\n/** @type {<T extends TypedArray>(typedArray: T, target: number, start: number, end?: number) => T} */\nexport const TypedArrayPrototypeCopyWithin = uncurryThis(\n  TypedArrayPrototype.copyWithin\n);\n/** @type {<T extends TypedArray>(typedArray: T, compareFn?: (a: number, b: number) => number) => T} */\nexport const TypedArrayPrototypeSort = uncurryThis(TypedArrayPrototype.sort);\n/** @type {<T extends TypedArray>(typedArray: T, start?: number, end?: number) => T} */\nexport const TypedArrayPrototypeSlice = uncurryThis(TypedArrayPrototype.slice);\n/** @type {<T extends TypedArray>(typedArray: T, start?: number, end?: number) => T} */\nexport const TypedArrayPrototypeSubarray = uncurryThis(\n  TypedArrayPrototype.subarray\n);\n/** @type {((typedArray: TypedArray) => ArrayBuffer)} */\nexport const TypedArrayPrototypeGetBuffer = uncurryThisGetter(\n  TypedArrayPrototype,\n  \"buffer\"\n);\n/** @type {((typedArray: TypedArray) => number)} */\nexport const TypedArrayPrototypeGetByteOffset = uncurryThisGetter(\n  TypedArrayPrototype,\n  \"byteOffset\"\n);\n/** @type {((typedArray: TypedArray) => number)} */\nexport const TypedArrayPrototypeGetLength = uncurryThisGetter(\n  TypedArrayPrototype,\n  \"length\"\n);\n/** @type {(target: unknown) => string} */\nexport const TypedArrayPrototypeGetSymbolToStringTag = uncurryThisGetter(\n  TypedArrayPrototype,\n  SymbolToStringTag\n);\n\n// Uint16Array\nexport const NativeUint16Array = Uint16Array;\n/** @type {Uint16ArrayConstructor[\"from\"]} */\nexport const Uint16ArrayFrom = (...args) => {\n  return ReflectApply(TypedArrayFrom, NativeUint16Array, args);\n};\n\n// Uint32Array\nexport const NativeUint32Array = Uint32Array;\n\n// Float32Array\nexport const NativeFloat32Array = Float32Array;\n\n// ArrayIterator\n/** @type {any} */\nexport const ArrayIteratorPrototype = ReflectGetPrototypeOf([][SymbolIterator]());\n/** @type {<T>(arrayIterator: IterableIterator<T>) => IteratorResult<T>} */\nexport const ArrayIteratorPrototypeNext = uncurryThis(ArrayIteratorPrototype.next);\n\n// Generator\n/** @type {<T = unknown, TReturn = any, TNext = unknown>(generator: Generator<T, TReturn, TNext>, value?: TNext) => T} */\nexport const GeneratorPrototypeNext = uncurryThis((function* () {})().next);\n\n// Iterator\nexport const IteratorPrototype = ReflectGetPrototypeOf(ArrayIteratorPrototype);\n\n// DataView\nconst DataViewPrototype = DataView.prototype;\n/** @type {(dataView: DataView, byteOffset: number, littleEndian?: boolean) => number} */\nexport const DataViewPrototypeGetUint16 = uncurryThis(\n  DataViewPrototype.getUint16\n);\n/** @type {(dataView: DataView, byteOffset: number, value: number, littleEndian?: boolean) => void} */\nexport const DataViewPrototypeSetUint16 = uncurryThis(\n  DataViewPrototype.setUint16\n);\n\n// Error\nexport const NativeTypeError = TypeError;\nexport const NativeRangeError = RangeError;\n\n// WeakSet\n/**\n * Do not construct with arguments to avoid calling the \"add\" method\n *\n * @type {{new <T extends {}>(): WeakSet<T>}}\n */\nexport const NativeWeakSet = WeakSet;\nconst WeakSetPrototype = NativeWeakSet.prototype;\n/** @type {<T extends {}>(set: WeakSet<T>, value: T) => Set<T>} */\nexport const WeakSetPrototypeAdd = uncurryThis(WeakSetPrototype.add);\n/** @type {<T extends {}>(set: WeakSet<T>, value: T) => boolean} */\nexport const WeakSetPrototypeHas = uncurryThis(WeakSetPrototype.has);\n\n// WeakMap\n/**\n * Do not construct with arguments to avoid calling the \"set\" method\n *\n * @type {{new <K extends {}, V>(): WeakMap<K, V>}}\n */\nexport const NativeWeakMap = WeakMap;\nconst WeakMapPrototype = NativeWeakMap.prototype;\n/** @type {<K extends {}, V>(weakMap: WeakMap<K, V>, key: K) => V} */\nexport const WeakMapPrototypeGet = uncurryThis(WeakMapPrototype.get);\n/** @type {<K extends {}, V>(weakMap: WeakMap<K, V>, key: K) => boolean} */\nexport const WeakMapPrototypeHas = uncurryThis(WeakMapPrototype.has);\n/** @type {<K extends {}, V>(weakMap: WeakMap<K, V>, key: K, value: V) => WeakMap} */\nexport const WeakMapPrototypeSet = uncurryThis(WeakMapPrototype.set);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}