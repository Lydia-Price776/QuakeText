{"ast":null,"code":"/**\n * @module ol/DataTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\n\n/**\n * Data that can be used with a DataTile.  For increased browser compatibility, use\n * Uint8Array instead of Uint8ClampedArray where possible.\n * @typedef {Uint8Array|Uint8ClampedArray|Float32Array|DataView} Data\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @property {function(): Promise<Data>} loader Data loader.\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {import('./size.js').Size} [size=[256, 256]] Tile size.\n * @api\n */\n\nclass DataTile extends Tile {\n  /**\n   * @param {Options} options Tile options.\n   */\n  constructor(options) {\n    const state = TileState.IDLE;\n    super(options.tileCoord, state, {\n      transition: options.transition,\n      interpolate: options.interpolate\n    });\n\n    /**\n     * @type {function(): Promise<Data>}\n     * @private\n     */\n    this.loader_ = options.loader;\n\n    /**\n     * @type {Data}\n     * @private\n     */\n    this.data_ = null;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.error_ = null;\n\n    /**\n     * @type {import('./size.js').Size}\n     * @private\n     */\n    this.size_ = options.size || [256, 256];\n  }\n\n  /**\n   * Get the tile size.\n   * @return {import('./size.js').Size} Tile size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the data for the tile.\n   * @return {Data} Tile data.\n   * @api\n   */\n  getData() {\n    return this.data_;\n  }\n\n  /**\n   * Get any loading error.\n   * @return {Error} Loading error.\n   * @api\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @api\n   */\n  load() {\n    if (this.state !== TileState.IDLE && this.state !== TileState.ERROR) {\n      return;\n    }\n    this.state = TileState.LOADING;\n    this.changed();\n    const self = this;\n    this.loader_().then(function (data) {\n      self.data_ = data;\n      self.state = TileState.LOADED;\n      self.changed();\n    }).catch(function (error) {\n      self.error_ = error;\n      self.state = TileState.ERROR;\n      self.changed();\n    });\n  }\n}\nexport default DataTile;","map":{"version":3,"names":["Tile","TileState","DataTile","constructor","options","state","IDLE","tileCoord","transition","interpolate","loader_","loader","data_","error_","size_","size","getSize","getData","getError","load","ERROR","LOADING","changed","self","then","data","LOADED","catch","error"],"sources":["/Users/lydiaprice/quake-text/node_modules/ol/DataTile.js"],"sourcesContent":["/**\n * @module ol/DataTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\n\n/**\n * Data that can be used with a DataTile.  For increased browser compatibility, use\n * Uint8Array instead of Uint8ClampedArray where possible.\n * @typedef {Uint8Array|Uint8ClampedArray|Float32Array|DataView} Data\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @property {function(): Promise<Data>} loader Data loader.\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {import('./size.js').Size} [size=[256, 256]] Tile size.\n * @api\n */\n\nclass DataTile extends Tile {\n  /**\n   * @param {Options} options Tile options.\n   */\n  constructor(options) {\n    const state = TileState.IDLE;\n\n    super(options.tileCoord, state, {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    });\n\n    /**\n     * @type {function(): Promise<Data>}\n     * @private\n     */\n    this.loader_ = options.loader;\n\n    /**\n     * @type {Data}\n     * @private\n     */\n    this.data_ = null;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.error_ = null;\n\n    /**\n     * @type {import('./size.js').Size}\n     * @private\n     */\n    this.size_ = options.size || [256, 256];\n  }\n\n  /**\n   * Get the tile size.\n   * @return {import('./size.js').Size} Tile size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the data for the tile.\n   * @return {Data} Tile data.\n   * @api\n   */\n  getData() {\n    return this.data_;\n  }\n\n  /**\n   * Get any loading error.\n   * @return {Error} Loading error.\n   * @api\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @api\n   */\n  load() {\n    if (this.state !== TileState.IDLE && this.state !== TileState.ERROR) {\n      return;\n    }\n    this.state = TileState.LOADING;\n    this.changed();\n\n    const self = this;\n    this.loader_()\n      .then(function (data) {\n        self.data_ = data;\n        self.state = TileState.LOADED;\n        self.changed();\n      })\n      .catch(function (error) {\n        self.error_ = error;\n        self.state = TileState.ERROR;\n        self.changed();\n      });\n  }\n}\n\nexport default DataTile;\n"],"mappings":"AAAA;AACA;AACA;AACA,OAAOA,IAAI,MAAM,WAAW;AAC5B,OAAOC,SAAS,MAAM,gBAAgB;;AAEtC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,QAAQ,SAASF,IAAI,CAAC;EAC1B;AACF;AACA;EACEG,WAAW,CAACC,OAAO,EAAE;IACnB,MAAMC,KAAK,GAAGJ,SAAS,CAACK,IAAI;IAE5B,KAAK,CAACF,OAAO,CAACG,SAAS,EAAEF,KAAK,EAAE;MAC9BG,UAAU,EAAEJ,OAAO,CAACI,UAAU;MAC9BC,WAAW,EAAEL,OAAO,CAACK;IACvB,CAAC,CAAC;;IAEF;AACJ;AACA;AACA;IACI,IAAI,CAACC,OAAO,GAAGN,OAAO,CAACO,MAAM;;IAE7B;AACJ;AACA;AACA;IACI,IAAI,CAACC,KAAK,GAAG,IAAI;;IAEjB;AACJ;AACA;AACA;IACI,IAAI,CAACC,MAAM,GAAG,IAAI;;IAElB;AACJ;AACA;AACA;IACI,IAAI,CAACC,KAAK,GAAGV,OAAO,CAACW,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC;EACzC;;EAEA;AACF;AACA;AACA;EACEC,OAAO,GAAG;IACR,OAAO,IAAI,CAACF,KAAK;EACnB;;EAEA;AACF;AACA;AACA;AACA;EACEG,OAAO,GAAG;IACR,OAAO,IAAI,CAACL,KAAK;EACnB;;EAEA;AACF;AACA;AACA;AACA;EACEM,QAAQ,GAAG;IACT,OAAO,IAAI,CAACL,MAAM;EACpB;;EAEA;AACF;AACA;AACA;EACEM,IAAI,GAAG;IACL,IAAI,IAAI,CAACd,KAAK,KAAKJ,SAAS,CAACK,IAAI,IAAI,IAAI,CAACD,KAAK,KAAKJ,SAAS,CAACmB,KAAK,EAAE;MACnE;IACF;IACA,IAAI,CAACf,KAAK,GAAGJ,SAAS,CAACoB,OAAO;IAC9B,IAAI,CAACC,OAAO,EAAE;IAEd,MAAMC,IAAI,GAAG,IAAI;IACjB,IAAI,CAACb,OAAO,EAAE,CACXc,IAAI,CAAC,UAAUC,IAAI,EAAE;MACpBF,IAAI,CAACX,KAAK,GAAGa,IAAI;MACjBF,IAAI,CAAClB,KAAK,GAAGJ,SAAS,CAACyB,MAAM;MAC7BH,IAAI,CAACD,OAAO,EAAE;IAChB,CAAC,CAAC,CACDK,KAAK,CAAC,UAAUC,KAAK,EAAE;MACtBL,IAAI,CAACV,MAAM,GAAGe,KAAK;MACnBL,IAAI,CAAClB,KAAK,GAAGJ,SAAS,CAACmB,KAAK;MAC5BG,IAAI,CAACD,OAAO,EAAE;IAChB,CAAC,CAAC;EACN;AACF;AAEA,eAAepB,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}