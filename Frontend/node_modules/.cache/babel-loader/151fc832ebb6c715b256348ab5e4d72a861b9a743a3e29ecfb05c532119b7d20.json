{"ast":null,"code":"/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport { asString } from '../color.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { shared as iconImageCache } from './IconImageCache.js';\nimport { listenImage } from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1);\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.imageState_ = ImageState.LOADING;\n    try {\n      /** @type {HTMLImageElement} */this.image_.src = this.src_;\n    } catch (e) {\n      this.handleImageError_();\n    }\n    this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (!this.color_ || this.canvas_[pixelRatio] || this.imageState_ !== ImageState.LOADED) {\n      return;\n    }\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\nexport default IconImage;","map":{"version":3,"names":["EventTarget","EventType","ImageState","asString","createCanvasContext2D","shared","iconImageCache","listenImage","taintedTestContext","IconImage","constructor","image","src","size","crossOrigin","imageState","color","hitDetectionImage_","image_","crossOrigin_","canvas_","color_","unlisten_","imageState_","size_","src_","tainted_","initializeImage_","Image","isTainted_","undefined","LOADED","drawImage","getImageData","e","dispatchChangeEvent_","dispatchEvent","CHANGE","handleImageError_","ERROR","unlistenImage_","handleImageLoad_","width","height","getImage","pixelRatio","replaceColor_","getPixelRatio","getImageState","getHitDetectionImage","context","fillRect","canvas","getSize","getSrc","load","IDLE","LOADING","bind","document","createElement","Math","ceil","ctx","getContext","scale","globalCompositeOperation","fillStyle","get","iconImage","set"],"sources":["/Users/lydiaprice/quake-text/Frontend/node_modules/ol/style/IconImage.js"],"sourcesContent":["/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1);\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n    } catch (e) {\n      this.handleImageError_();\n    }\n    this.unlisten_ = listenImage(\n      this.image_,\n      this.handleImageLoad_.bind(this),\n      this.handleImageError_.bind(this)\n    );\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}