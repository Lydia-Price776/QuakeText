{"ast":null,"code":"import fs from 'fs';\nimport { BaseSource } from './basesource.js';\nfunction closeAsync(fd) {\n  return new Promise((resolve, reject) => {\n    fs.close(fd, err => {\n      if (err) {\n        reject(err);\n      } else {\n        resolve();\n      }\n    });\n  });\n}\nfunction openAsync(path, flags) {\n  let mode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n  return new Promise((resolve, reject) => {\n    fs.open(path, flags, mode, (err, fd) => {\n      if (err) {\n        reject(err);\n      } else {\n        resolve(fd);\n      }\n    });\n  });\n}\nfunction readAsync() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  return new Promise((resolve, reject) => {\n    fs.read(...args, (err, bytesRead, buffer) => {\n      if (err) {\n        reject(err);\n      } else {\n        resolve({\n          bytesRead,\n          buffer\n        });\n      }\n    });\n  });\n}\nclass FileSource extends BaseSource {\n  constructor(path) {\n    super();\n    this.path = path;\n    this.openRequest = openAsync(path, 'r');\n  }\n  async fetchSlice(slice) {\n    // TODO: use `signal`\n    const fd = await this.openRequest;\n    const {\n      buffer\n    } = await readAsync(fd, Buffer.alloc(slice.length), 0, slice.length, slice.offset);\n    return buffer.buffer;\n  }\n  async close() {\n    const fd = await this.openRequest;\n    await closeAsync(fd);\n  }\n}\nexport function makeFileSource(path) {\n  return new FileSource(path);\n}","map":{"version":3,"names":["fs","BaseSource","closeAsync","fd","Promise","resolve","reject","close","err","openAsync","path","flags","mode","undefined","open","readAsync","args","read","bytesRead","buffer","FileSource","constructor","openRequest","fetchSlice","slice","Buffer","alloc","length","offset","makeFileSource"],"sources":["/Users/lydiaprice/quake-text/Frontend/node_modules/geotiff/dist-module/source/file.js"],"sourcesContent":["import fs from 'fs';\nimport { BaseSource } from './basesource.js';\n\nfunction closeAsync(fd) {\n  return new Promise((resolve, reject) => {\n    fs.close(fd, (err) => {\n      if (err) {\n        reject(err);\n      } else {\n        resolve();\n      }\n    });\n  });\n}\n\nfunction openAsync(path, flags, mode = undefined) {\n  return new Promise((resolve, reject) => {\n    fs.open(path, flags, mode, (err, fd) => {\n      if (err) {\n        reject(err);\n      } else {\n        resolve(fd);\n      }\n    });\n  });\n}\n\nfunction readAsync(...args) {\n  return new Promise((resolve, reject) => {\n    fs.read(...args, (err, bytesRead, buffer) => {\n      if (err) {\n        reject(err);\n      } else {\n        resolve({ bytesRead, buffer });\n      }\n    });\n  });\n}\n\nclass FileSource extends BaseSource {\n  constructor(path) {\n    super();\n    this.path = path;\n    this.openRequest = openAsync(path, 'r');\n  }\n\n  async fetchSlice(slice) {\n    // TODO: use `signal`\n    const fd = await this.openRequest;\n    const { buffer } = await readAsync(\n      fd,\n      Buffer.alloc(slice.length),\n      0,\n      slice.length,\n      slice.offset,\n    );\n    return buffer.buffer;\n  }\n\n  async close() {\n    const fd = await this.openRequest;\n    await closeAsync(fd);\n  }\n}\n\nexport function makeFileSource(path) {\n  return new FileSource(path);\n}\n"],"mappings":"AAAA,OAAOA,EAAE,MAAM,IAAI;AACnB,SAASC,UAAU,QAAQ,iBAAiB;AAE5C,SAASC,UAAU,CAACC,EAAE,EAAE;EACtB,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACtCN,EAAE,CAACO,KAAK,CAACJ,EAAE,EAAGK,GAAG,IAAK;MACpB,IAAIA,GAAG,EAAE;QACPF,MAAM,CAACE,GAAG,CAAC;MACb,CAAC,MAAM;QACLH,OAAO,EAAE;MACX;IACF,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ;AAEA,SAASI,SAAS,CAACC,IAAI,EAAEC,KAAK,EAAoB;EAAA,IAAlBC,IAAI,uEAAGC,SAAS;EAC9C,OAAO,IAAIT,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACtCN,EAAE,CAACc,IAAI,CAACJ,IAAI,EAAEC,KAAK,EAAEC,IAAI,EAAE,CAACJ,GAAG,EAAEL,EAAE,KAAK;MACtC,IAAIK,GAAG,EAAE;QACPF,MAAM,CAACE,GAAG,CAAC;MACb,CAAC,MAAM;QACLH,OAAO,CAACF,EAAE,CAAC;MACb;IACF,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ;AAEA,SAASY,SAAS,GAAU;EAAA,kCAANC,IAAI;IAAJA,IAAI;EAAA;EACxB,OAAO,IAAIZ,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACtCN,EAAE,CAACiB,IAAI,CAAC,GAAGD,IAAI,EAAE,CAACR,GAAG,EAAEU,SAAS,EAAEC,MAAM,KAAK;MAC3C,IAAIX,GAAG,EAAE;QACPF,MAAM,CAACE,GAAG,CAAC;MACb,CAAC,MAAM;QACLH,OAAO,CAAC;UAAEa,SAAS;UAAEC;QAAO,CAAC,CAAC;MAChC;IACF,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ;AAEA,MAAMC,UAAU,SAASnB,UAAU,CAAC;EAClCoB,WAAW,CAACX,IAAI,EAAE;IAChB,KAAK,EAAE;IACP,IAAI,CAACA,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACY,WAAW,GAAGb,SAAS,CAACC,IAAI,EAAE,GAAG,CAAC;EACzC;EAEA,MAAMa,UAAU,CAACC,KAAK,EAAE;IACtB;IACA,MAAMrB,EAAE,GAAG,MAAM,IAAI,CAACmB,WAAW;IACjC,MAAM;MAAEH;IAAO,CAAC,GAAG,MAAMJ,SAAS,CAChCZ,EAAE,EACFsB,MAAM,CAACC,KAAK,CAACF,KAAK,CAACG,MAAM,CAAC,EAC1B,CAAC,EACDH,KAAK,CAACG,MAAM,EACZH,KAAK,CAACI,MAAM,CACb;IACD,OAAOT,MAAM,CAACA,MAAM;EACtB;EAEA,MAAMZ,KAAK,GAAG;IACZ,MAAMJ,EAAE,GAAG,MAAM,IAAI,CAACmB,WAAW;IACjC,MAAMpB,UAAU,CAACC,EAAE,CAAC;EACtB;AACF;AAEA,OAAO,SAAS0B,cAAc,CAACnB,IAAI,EAAE;EACnC,OAAO,IAAIU,UAAU,CAACV,IAAI,CAAC;AAC7B"},"metadata":{},"sourceType":"module","externalDependencies":[]}