{"ast":null,"code":"/**\n * @module ol/reproj/Image\n */\nimport { ERROR_THRESHOLD } from './common.js';\nimport EventType from '../events/EventType.js';\nimport ImageBase from '../ImageBase.js';\nimport ImageState from '../ImageState.js';\nimport Triangulation from './Triangulation.js';\nimport { calculateSourceResolution, render as renderReprojected } from '../reproj.js';\nimport { getCenter, getHeight, getIntersection, getWidth } from '../extent.js';\nimport { listen, unlistenByKey } from '../events.js';\n\n/**\n * @typedef {function(import(\"../extent.js\").Extent, number, number) : import(\"../ImageBase.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected image.\n * See {@link module:ol/source/Image~ImageSource}.\n */\nclass ReprojImage extends ImageBase {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection (of the data).\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent.\n   * @param {number} targetResolution Target resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {FunctionType} getImageFunction\n   *     Function returning source images (extent, resolution, pixelRatio).\n   * @param {boolean} interpolate Use linear interpolation when resampling.\n   */\n  constructor(sourceProj, targetProj, targetExtent, targetResolution, pixelRatio, getImageFunction, interpolate) {\n    const maxSourceExtent = sourceProj.getExtent();\n    const maxTargetExtent = targetProj.getExtent();\n    const limitedTargetExtent = maxTargetExtent ? getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n    const targetCenter = getCenter(limitedTargetExtent);\n    const sourceResolution = calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution);\n    const errorThresholdInPixels = ERROR_THRESHOLD;\n    const triangulation = new Triangulation(sourceProj, targetProj, limitedTargetExtent, maxSourceExtent, sourceResolution * errorThresholdInPixels, targetResolution);\n    const sourceExtent = triangulation.calculateSourceExtent();\n    const sourceImage = getImageFunction(sourceExtent, sourceResolution, pixelRatio);\n    const state = sourceImage ? ImageState.IDLE : ImageState.EMPTY;\n    const sourcePixelRatio = sourceImage ? sourceImage.getPixelRatio() : 1;\n    super(targetExtent, targetResolution, sourcePixelRatio, state);\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.targetProj_ = targetProj;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = triangulation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.targetResolution_ = targetResolution;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.targetExtent_ = targetExtent;\n\n    /**\n     * @private\n     * @type {import(\"../ImageBase.js\").default}\n     */\n    this.sourceImage_ = sourceImage;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourcePixelRatio_ = sourcePixelRatio;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = interpolate;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceListenerKey_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state == ImageState.LOADING) {\n      this.unlistenSource_();\n    }\n    super.disposeInternal();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  getProjection() {\n    return this.targetProj_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sourceState = this.sourceImage_.getState();\n    if (sourceState == ImageState.LOADED) {\n      const width = getWidth(this.targetExtent_) / this.targetResolution_;\n      const height = getHeight(this.targetExtent_) / this.targetResolution_;\n      this.canvas_ = renderReprojected(width, height, this.sourcePixelRatio_, this.sourceImage_.getResolution(), this.maxSourceExtent_, this.targetResolution_, this.targetExtent_, this.triangulation_, [{\n        extent: this.sourceImage_.getExtent(),\n        image: this.sourceImage_.getImage()\n      }], 0, undefined, this.interpolate_);\n    }\n    this.state = sourceState;\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      const sourceState = this.sourceImage_.getState();\n      if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n        this.reproject_();\n      } else {\n        this.sourceListenerKey_ = listen(this.sourceImage_, EventType.CHANGE, function (e) {\n          const sourceState = this.sourceImage_.getState();\n          if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n            this.unlistenSource_();\n            this.reproject_();\n          }\n        }, this);\n        this.sourceImage_.load();\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSource_() {\n    unlistenByKey( /** @type {!import(\"../events.js\").EventsKey} */this.sourceListenerKey_);\n    this.sourceListenerKey_ = null;\n  }\n}\nexport default ReprojImage;","map":{"version":3,"names":["ERROR_THRESHOLD","EventType","ImageBase","ImageState","Triangulation","calculateSourceResolution","render","renderReprojected","getCenter","getHeight","getIntersection","getWidth","listen","unlistenByKey","ReprojImage","constructor","sourceProj","targetProj","targetExtent","targetResolution","pixelRatio","getImageFunction","interpolate","maxSourceExtent","getExtent","maxTargetExtent","limitedTargetExtent","targetCenter","sourceResolution","errorThresholdInPixels","triangulation","sourceExtent","calculateSourceExtent","sourceImage","state","IDLE","EMPTY","sourcePixelRatio","getPixelRatio","targetProj_","maxSourceExtent_","triangulation_","targetResolution_","targetExtent_","sourceImage_","sourcePixelRatio_","interpolate_","canvas_","sourceListenerKey_","disposeInternal","LOADING","unlistenSource_","getImage","getProjection","reproject_","sourceState","getState","LOADED","width","height","getResolution","extent","image","undefined","changed","load","ERROR","CHANGE","e"],"sources":["/Users/lydiaprice/quake-text/node_modules/ol/reproj/Image.js"],"sourcesContent":["/**\n * @module ol/reproj/Image\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport ImageBase from '../ImageBase.js';\nimport ImageState from '../ImageState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {getCenter, getHeight, getIntersection, getWidth} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../extent.js\").Extent, number, number) : import(\"../ImageBase.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected image.\n * See {@link module:ol/source/Image~ImageSource}.\n */\nclass ReprojImage extends ImageBase {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection (of the data).\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent.\n   * @param {number} targetResolution Target resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {FunctionType} getImageFunction\n   *     Function returning source images (extent, resolution, pixelRatio).\n   * @param {boolean} interpolate Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    targetResolution,\n    pixelRatio,\n    getImageFunction,\n    interpolate\n  ) {\n    const maxSourceExtent = sourceProj.getExtent();\n    const maxTargetExtent = targetProj.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    const targetCenter = getCenter(limitedTargetExtent);\n    const sourceResolution = calculateSourceResolution(\n      sourceProj,\n      targetProj,\n      targetCenter,\n      targetResolution\n    );\n\n    const errorThresholdInPixels = ERROR_THRESHOLD;\n\n    const triangulation = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    const sourceExtent = triangulation.calculateSourceExtent();\n    const sourceImage = getImageFunction(\n      sourceExtent,\n      sourceResolution,\n      pixelRatio\n    );\n    const state = sourceImage ? ImageState.IDLE : ImageState.EMPTY;\n    const sourcePixelRatio = sourceImage ? sourceImage.getPixelRatio() : 1;\n\n    super(targetExtent, targetResolution, sourcePixelRatio, state);\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.targetProj_ = targetProj;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = triangulation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.targetResolution_ = targetResolution;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.targetExtent_ = targetExtent;\n\n    /**\n     * @private\n     * @type {import(\"../ImageBase.js\").default}\n     */\n    this.sourceImage_ = sourceImage;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourcePixelRatio_ = sourcePixelRatio;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = interpolate;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceListenerKey_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state == ImageState.LOADING) {\n      this.unlistenSource_();\n    }\n    super.disposeInternal();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  getProjection() {\n    return this.targetProj_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sourceState = this.sourceImage_.getState();\n    if (sourceState == ImageState.LOADED) {\n      const width = getWidth(this.targetExtent_) / this.targetResolution_;\n      const height = getHeight(this.targetExtent_) / this.targetResolution_;\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.sourcePixelRatio_,\n        this.sourceImage_.getResolution(),\n        this.maxSourceExtent_,\n        this.targetResolution_,\n        this.targetExtent_,\n        this.triangulation_,\n        [\n          {\n            extent: this.sourceImage_.getExtent(),\n            image: this.sourceImage_.getImage(),\n          },\n        ],\n        0,\n        undefined,\n        this.interpolate_\n      );\n    }\n    this.state = sourceState;\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n\n      const sourceState = this.sourceImage_.getState();\n      if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n        this.reproject_();\n      } else {\n        this.sourceListenerKey_ = listen(\n          this.sourceImage_,\n          EventType.CHANGE,\n          function (e) {\n            const sourceState = this.sourceImage_.getState();\n            if (\n              sourceState == ImageState.LOADED ||\n              sourceState == ImageState.ERROR\n            ) {\n              this.unlistenSource_();\n              this.reproject_();\n            }\n          },\n          this\n        );\n        this.sourceImage_.load();\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSource_() {\n    unlistenByKey(\n      /** @type {!import(\"../events.js\").EventsKey} */ (this.sourceListenerKey_)\n    );\n    this.sourceListenerKey_ = null;\n  }\n}\n\nexport default ReprojImage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}