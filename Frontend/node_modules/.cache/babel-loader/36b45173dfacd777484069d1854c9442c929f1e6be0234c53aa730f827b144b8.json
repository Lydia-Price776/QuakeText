{"ast":null,"code":"/**\n * @module ol/format/XML\n */\nimport { isDocument, parse } from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @abstract\n */\nclass XML {\n  /**\n   * Read the source document.\n   *\n   * @param {Document|Element|string} source The XML source.\n   * @return {Object} An object representing the source.\n   * @api\n   */\n  read(source) {\n    if (!source) {\n      return null;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFromDocument(doc);\n    } else if (isDocument(source)) {\n      return this.readFromDocument( /** @type {Document} */source);\n    } else {\n      return this.readFromNode( /** @type {Element} */source);\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Object} Object\n   */\n  readFromDocument(doc) {\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readFromNode( /** @type {Element} */n);\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @abstract\n   * @param {Element} node Node.\n   * @return {Object} Object\n   */\n  readFromNode(node) {}\n}\nexport default XML;","map":{"version":3,"names":["isDocument","parse","XML","read","source","doc","readFromDocument","readFromNode","n","firstChild","nextSibling","nodeType","Node","ELEMENT_NODE","node"],"sources":["/Users/lydiaprice/quake-text/Frontend/node_modules/ol/format/XML.js"],"sourcesContent":["/**\n * @module ol/format/XML\n */\nimport {isDocument, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @abstract\n */\nclass XML {\n  /**\n   * Read the source document.\n   *\n   * @param {Document|Element|string} source The XML source.\n   * @return {Object} An object representing the source.\n   * @api\n   */\n  read(source) {\n    if (!source) {\n      return null;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFromDocument(doc);\n    } else if (isDocument(source)) {\n      return this.readFromDocument(/** @type {Document} */ (source));\n    } else {\n      return this.readFromNode(/** @type {Element} */ (source));\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Object} Object\n   */\n  readFromDocument(doc) {\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readFromNode(/** @type {Element} */ (n));\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @abstract\n   * @param {Element} node Node.\n   * @return {Object} Object\n   */\n  readFromNode(node) {}\n}\n\nexport default XML;\n"],"mappings":"AAAA;AACA;AACA;AACA,SAAQA,UAAU,EAAEC,KAAK,QAAO,WAAW;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,GAAG,CAAC;EACR;AACF;AACA;AACA;AACA;AACA;AACA;EACEC,IAAI,CAACC,MAAM,EAAE;IACX,IAAI,CAACA,MAAM,EAAE;MACX,OAAO,IAAI;IACb,CAAC,MAAM,IAAI,OAAOA,MAAM,KAAK,QAAQ,EAAE;MACrC,MAAMC,GAAG,GAAGJ,KAAK,CAACG,MAAM,CAAC;MACzB,OAAO,IAAI,CAACE,gBAAgB,CAACD,GAAG,CAAC;IACnC,CAAC,MAAM,IAAIL,UAAU,CAACI,MAAM,CAAC,EAAE;MAC7B,OAAO,IAAI,CAACE,gBAAgB,EAAC,uBAAyBF,MAAM,CAAE;IAChE,CAAC,MAAM;MACL,OAAO,IAAI,CAACG,YAAY,EAAC,sBAAwBH,MAAM,CAAE;IAC3D;EACF;;EAEA;AACF;AACA;AACA;EACEE,gBAAgB,CAACD,GAAG,EAAE;IACpB,KAAK,IAAIG,CAAC,GAAGH,GAAG,CAACI,UAAU,EAAED,CAAC,EAAEA,CAAC,GAAGA,CAAC,CAACE,WAAW,EAAE;MACjD,IAAIF,CAAC,CAACG,QAAQ,IAAIC,IAAI,CAACC,YAAY,EAAE;QACnC,OAAO,IAAI,CAACN,YAAY,EAAC,sBAAwBC,CAAC,CAAE;MACtD;IACF;IACA,OAAO,IAAI;EACb;;EAEA;AACF;AACA;AACA;AACA;EACED,YAAY,CAACO,IAAI,EAAE,CAAC;AACtB;AAEA,eAAeZ,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}