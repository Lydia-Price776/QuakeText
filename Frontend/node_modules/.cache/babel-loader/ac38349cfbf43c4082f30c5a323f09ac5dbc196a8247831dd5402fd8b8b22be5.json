{"ast":null,"code":"/**\n * @module ol/format/GPX\n */\nimport Feature from '../Feature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport Point from '../geom/Point.js';\nimport XMLFeature from './XMLFeature.js';\nimport { OBJECT_PROPERTY_NODE_FACTORY, XML_SCHEMA_INSTANCE_URI, createElementNS, makeArrayPusher, makeArraySerializer, makeChildAppender, makeObjectPropertySetter, makeSequence, makeSimpleNodeFactory, makeStructureNS, parseNode, pushParseAndPop, pushSerializeAndPop } from '../xml.js';\nimport { get as getProjection } from '../proj.js';\nimport { readDateTime, readDecimal, readPositiveInteger, readString, writeDateTimeTextNode, writeDecimalTextNode, writeNonNegativeIntegerTextNode, writeStringTextNode } from './xsd.js';\nimport { transformGeometryWithOptions } from './Feature.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [null, 'http://www.topografix.com/GPX/1/0', 'http://www.topografix.com/GPX/1/1'];\n\n/**\n * @const\n * @type {string}\n */\nconst SCHEMA_LOCATION = 'http://www.topografix.com/GPX/1/1 ' + 'http://www.topografix.com/GPX/1/1/gpx.xsd';\n\n/**\n * @const\n * @type {Object<string, function(Node, Array<*>): (Feature|undefined)>}\n */\nconst FEATURE_READER = {\n  'rte': readRte,\n  'trk': readTrk,\n  'wpt': readWpt\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GPX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'rte': makeArrayPusher(readRte),\n  'trk': makeArrayPusher(readTrk),\n  'wpt': makeArrayPusher(readWpt)\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'text': makeObjectPropertySetter(readString, 'linkText'),\n  'type': makeObjectPropertySetter(readString, 'linkType')\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst GPX_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'rte': makeChildAppender(writeRte),\n  'trk': makeChildAppender(writeTrk),\n  'wpt': makeChildAppender(writeWpt)\n});\n\n/**\n * @typedef {Object} Options\n * @property {function(Feature, Node):void} [readExtensions] Callback function\n * to process `extensions` nodes. To prevent memory leaks, this callback function must\n * not store any references to the node. Note that the `extensions`\n * node is not allowed in GPX 1.0. Moreover, only `extensions`\n * nodes from `wpt`, `rte` and `trk` can be processed, as those are\n * directly mapped to a feature.\n */\n\n/**\n * @typedef {Object} LayoutOptions\n * @property {boolean} [hasZ] HasZ.\n * @property {boolean} [hasM] HasM.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GPX format.\n *\n * Note that {@link module:ol/format/GPX~GPX#readFeature} only reads the first\n * feature of the source.\n *\n * When reading, routes (`<rte>`) are converted into LineString geometries, and\n * tracks (`<trk>`) into MultiLineString. Any properties on route and track\n * waypoints are ignored.\n *\n * When writing, LineString geometries are output as routes (`<rte>`), and\n * MultiLineString as tracks (`<trk>`).\n *\n * @api\n */\nclass GPX extends XMLFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @type {function(Feature, Node): void|undefined}\n     * @private\n     */\n    this.readExtensions_ = options.readExtensions;\n  }\n\n  /**\n   * @param {Array<Feature>} features List of features.\n   * @private\n   */\n  handleReadExtensions_(features) {\n    if (!features) {\n      features = [];\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      const feature = features[i];\n      if (this.readExtensions_) {\n        const extensionsNode = feature.get('extensionsNode_') || null;\n        this.readExtensions_(feature, extensionsNode);\n      }\n      feature.set('extensionsNode_', undefined);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromNode(node, options) {\n    if (!NAMESPACE_URIS.includes(node.namespaceURI)) {\n      return null;\n    }\n    const featureReader = FEATURE_READER[node.localName];\n    if (!featureReader) {\n      return null;\n    }\n    const feature = featureReader(node, [this.getReadOptions(node, options)]);\n    if (!feature) {\n      return null;\n    }\n    this.handleReadExtensions_([feature]);\n    return feature;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    if (!NAMESPACE_URIS.includes(node.namespaceURI)) {\n      return [];\n    }\n    if (node.localName == 'gpx') {\n      /** @type {Array<Feature>} */\n      const features = pushParseAndPop([], GPX_PARSERS, node, [this.getReadOptions(node, options)]);\n      if (features) {\n        this.handleReadExtensions_(features);\n        return features;\n      } else {\n        return [];\n      }\n    }\n    return [];\n  }\n\n  /**\n   * Encode an array of features in the GPX format as an XML node.\n   * LineString geometries are output as routes (`<rte>`), and MultiLineString\n   * as tracks (`<trk>`).\n   *\n   * @param {Array<Feature>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   * @api\n   */\n  writeFeaturesNode(features, options) {\n    options = this.adaptOptions(options);\n    //FIXME Serialize metadata\n    const gpx = createElementNS('http://www.topografix.com/GPX/1/1', 'gpx');\n    const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n    gpx.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n    gpx.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', SCHEMA_LOCATION);\n    gpx.setAttribute('version', '1.1');\n    gpx.setAttribute('creator', 'OpenLayers');\n    pushSerializeAndPop( /** @type {import(\"../xml.js\").NodeStackItem} */\n    {\n      node: gpx\n    }, GPX_SERIALIZERS, GPX_NODE_FACTORY, features, [options]);\n    return gpx;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst RTE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeObjectPropertySetter(readString),\n  'cmt': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'src': makeObjectPropertySetter(readString),\n  'link': parseLink,\n  'number': makeObjectPropertySetter(readPositiveInteger),\n  'extensions': parseExtensions,\n  'type': makeObjectPropertySetter(readString),\n  'rtept': parseRtePt\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst RTEPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeObjectPropertySetter(readDecimal),\n  'time': makeObjectPropertySetter(readDateTime)\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TRK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeObjectPropertySetter(readString),\n  'cmt': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'src': makeObjectPropertySetter(readString),\n  'link': parseLink,\n  'number': makeObjectPropertySetter(readPositiveInteger),\n  'type': makeObjectPropertySetter(readString),\n  'extensions': parseExtensions,\n  'trkseg': parseTrkSeg\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TRKSEG_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'trkpt': parseTrkPt\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TRKPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeObjectPropertySetter(readDecimal),\n  'time': makeObjectPropertySetter(readDateTime)\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst WPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeObjectPropertySetter(readDecimal),\n  'time': makeObjectPropertySetter(readDateTime),\n  'magvar': makeObjectPropertySetter(readDecimal),\n  'geoidheight': makeObjectPropertySetter(readDecimal),\n  'name': makeObjectPropertySetter(readString),\n  'cmt': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'src': makeObjectPropertySetter(readString),\n  'link': parseLink,\n  'sym': makeObjectPropertySetter(readString),\n  'type': makeObjectPropertySetter(readString),\n  'fix': makeObjectPropertySetter(readString),\n  'sat': makeObjectPropertySetter(readPositiveInteger),\n  'hdop': makeObjectPropertySetter(readDecimal),\n  'vdop': makeObjectPropertySetter(readDecimal),\n  'pdop': makeObjectPropertySetter(readDecimal),\n  'ageofdgpsdata': makeObjectPropertySetter(readDecimal),\n  'dgpsid': makeObjectPropertySetter(readPositiveInteger),\n  'extensions': parseExtensions\n});\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst LINK_SEQUENCE = ['text', 'type'];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst LINK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'text': makeChildAppender(writeStringTextNode),\n  'type': makeChildAppender(writeStringTextNode)\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst RTE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'rtept']);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst RTE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeChildAppender(writeStringTextNode),\n  'cmt': makeChildAppender(writeStringTextNode),\n  'desc': makeChildAppender(writeStringTextNode),\n  'src': makeChildAppender(writeStringTextNode),\n  'link': makeChildAppender(writeLink),\n  'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n  'rtept': makeArraySerializer(makeChildAppender(writeWptType))\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst RTEPT_TYPE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['ele', 'time']);\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst TRK_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'trkseg']);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst TRK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeChildAppender(writeStringTextNode),\n  'cmt': makeChildAppender(writeStringTextNode),\n  'desc': makeChildAppender(writeStringTextNode),\n  'src': makeChildAppender(writeStringTextNode),\n  'link': makeChildAppender(writeLink),\n  'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n  'trkseg': makeArraySerializer(makeChildAppender(writeTrkSeg))\n});\n\n/**\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst TRKSEG_NODE_FACTORY = makeSimpleNodeFactory('trkpt');\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst TRKSEG_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'trkpt': makeChildAppender(writeWptType)\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst WPT_TYPE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['ele', 'time', 'magvar', 'geoidheight', 'name', 'cmt', 'desc', 'src', 'link', 'sym', 'type', 'fix', 'sat', 'hdop', 'vdop', 'pdop', 'ageofdgpsdata', 'dgpsid']);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst WPT_TYPE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeChildAppender(writeDecimalTextNode),\n  'time': makeChildAppender(writeDateTimeTextNode),\n  'magvar': makeChildAppender(writeDecimalTextNode),\n  'geoidheight': makeChildAppender(writeDecimalTextNode),\n  'name': makeChildAppender(writeStringTextNode),\n  'cmt': makeChildAppender(writeStringTextNode),\n  'desc': makeChildAppender(writeStringTextNode),\n  'src': makeChildAppender(writeStringTextNode),\n  'link': makeChildAppender(writeLink),\n  'sym': makeChildAppender(writeStringTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n  'fix': makeChildAppender(writeStringTextNode),\n  'sat': makeChildAppender(writeNonNegativeIntegerTextNode),\n  'hdop': makeChildAppender(writeDecimalTextNode),\n  'vdop': makeChildAppender(writeDecimalTextNode),\n  'pdop': makeChildAppender(writeDecimalTextNode),\n  'ageofdgpsdata': makeChildAppender(writeDecimalTextNode),\n  'dgpsid': makeChildAppender(writeNonNegativeIntegerTextNode)\n});\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'wpt',\n  'LineString': 'rte',\n  'MultiLineString': 'trk'\n};\n\n/**\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nfunction GPX_NODE_FACTORY(value, objectStack, nodeName) {\n  const geometry = /** @type {Feature} */value.getGeometry();\n  if (geometry) {\n    const nodeName = GEOMETRY_TYPE_TO_NODENAME[geometry.getType()];\n    if (nodeName) {\n      const parentNode = objectStack[objectStack.length - 1].node;\n      return createElementNS(parentNode.namespaceURI, nodeName);\n    }\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {LayoutOptions} layoutOptions Layout options.\n * @param {Element} node Node.\n * @param {!Object} values Values.\n * @return {Array<number>} Flat coordinates.\n */\nfunction appendCoordinate(flatCoordinates, layoutOptions, node, values) {\n  flatCoordinates.push(parseFloat(node.getAttribute('lon')), parseFloat(node.getAttribute('lat')));\n  if ('ele' in values) {\n    flatCoordinates.push( /** @type {number} */values['ele']);\n    delete values['ele'];\n    layoutOptions.hasZ = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  if ('time' in values) {\n    flatCoordinates.push( /** @type {number} */values['time']);\n    delete values['time'];\n    layoutOptions.hasM = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  return flatCoordinates;\n}\n\n/**\n * Choose GeometryLayout based on flags in layoutOptions and adjust flatCoordinates\n * and ends arrays by shrinking them accordingly (removing unused zero entries).\n *\n * @param {LayoutOptions} layoutOptions Layout options.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {Array<number>} [ends] Ends.\n * @return {import(\"../geom/Geometry.js\").GeometryLayout} Layout.\n */\nfunction applyLayoutOptions(layoutOptions, flatCoordinates, ends) {\n  /** @type {import(\"../geom/Geometry.js\").GeometryLayout} */\n  let layout = 'XY';\n  let stride = 2;\n  if (layoutOptions.hasZ && layoutOptions.hasM) {\n    layout = 'XYZM';\n    stride = 4;\n  } else if (layoutOptions.hasZ) {\n    layout = 'XYZ';\n    stride = 3;\n  } else if (layoutOptions.hasM) {\n    layout = 'XYM';\n    stride = 3;\n  }\n  if (stride !== 4) {\n    for (let i = 0, ii = flatCoordinates.length / 4; i < ii; i++) {\n      flatCoordinates[i * stride] = flatCoordinates[i * 4];\n      flatCoordinates[i * stride + 1] = flatCoordinates[i * 4 + 1];\n      if (layoutOptions.hasZ) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 2];\n      }\n      if (layoutOptions.hasM) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 3];\n      }\n    }\n    flatCoordinates.length = flatCoordinates.length / 4 * stride;\n    if (ends) {\n      for (let i = 0, ii = ends.length; i < ii; i++) {\n        ends[i] = ends[i] / 4 * stride;\n      }\n    }\n  }\n  return layout;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseLink(node, objectStack) {\n  const values = /** @type {Object} */objectStack[objectStack.length - 1];\n  const href = node.getAttribute('href');\n  if (href !== null) {\n    values['link'] = href;\n  }\n  parseNode(LINK_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseExtensions(node, objectStack) {\n  const values = /** @type {Object} */objectStack[objectStack.length - 1];\n  values['extensionsNode_'] = node;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseRtePt(node, objectStack) {\n  const values = pushParseAndPop({}, RTEPT_PARSERS, node, objectStack);\n  if (values) {\n    const rteValues = /** @type {!Object} */\n    objectStack[objectStack.length - 1];\n    const flatCoordinates = /** @type {Array<number>} */\n    rteValues['flatCoordinates'];\n    const layoutOptions = /** @type {LayoutOptions} */\n    rteValues['layoutOptions'];\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseTrkPt(node, objectStack) {\n  const values = pushParseAndPop({}, TRKPT_PARSERS, node, objectStack);\n  if (values) {\n    const trkValues = /** @type {!Object} */\n    objectStack[objectStack.length - 1];\n    const flatCoordinates = /** @type {Array<number>} */\n    trkValues['flatCoordinates'];\n    const layoutOptions = /** @type {LayoutOptions} */\n    trkValues['layoutOptions'];\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseTrkSeg(node, objectStack) {\n  const values = /** @type {Object} */objectStack[objectStack.length - 1];\n  parseNode(TRKSEG_PARSERS, node, objectStack);\n  const flatCoordinates = /** @type {Array<number>} */\n  values['flatCoordinates'];\n  const ends = /** @type {Array<number>} */values['ends'];\n  ends.push(flatCoordinates.length);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Track.\n */\nfunction readRte(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */\n  objectStack[0];\n  const values = pushParseAndPop({\n    'flatCoordinates': [],\n    'layoutOptions': {}\n  }, RTE_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates = /** @type {Array<number>} */\n  values['flatCoordinates'];\n  delete values['flatCoordinates'];\n  const layoutOptions = /** @type {LayoutOptions} */values['layoutOptions'];\n  delete values['layoutOptions'];\n  const layout = applyLayoutOptions(layoutOptions, flatCoordinates);\n  const geometry = new LineString(flatCoordinates, layout);\n  transformGeometryWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values, true);\n  return feature;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Track.\n */\nfunction readTrk(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */\n  objectStack[0];\n  const values = pushParseAndPop({\n    'flatCoordinates': [],\n    'ends': [],\n    'layoutOptions': {}\n  }, TRK_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates = /** @type {Array<number>} */\n  values['flatCoordinates'];\n  delete values['flatCoordinates'];\n  const ends = /** @type {Array<number>} */values['ends'];\n  delete values['ends'];\n  const layoutOptions = /** @type {LayoutOptions} */values['layoutOptions'];\n  delete values['layoutOptions'];\n  const layout = applyLayoutOptions(layoutOptions, flatCoordinates, ends);\n  const geometry = new MultiLineString(flatCoordinates, layout, ends);\n  transformGeometryWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values, true);\n  return feature;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Waypoint.\n */\nfunction readWpt(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */\n  objectStack[0];\n  const values = pushParseAndPop({}, WPT_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const layoutOptions = /** @type {LayoutOptions} */{};\n  const coordinates = appendCoordinate([], layoutOptions, node, values);\n  const layout = applyLayoutOptions(layoutOptions, coordinates);\n  const geometry = new Point(coordinates, layout);\n  transformGeometryWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values, true);\n  return feature;\n}\n\n/**\n * @param {Element} node Node.\n * @param {string} value Value for the link's `href` attribute.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeLink(node, value, objectStack) {\n  node.setAttribute('href', value);\n  const context = objectStack[objectStack.length - 1];\n  const properties = context['properties'];\n  const link = [properties['linkText'], properties['linkType']];\n  pushSerializeAndPop( /** @type {import(\"../xml.js\").NodeStackItem} */{\n    node: node\n  }, LINK_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, link, objectStack, LINK_SEQUENCE);\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeWptType(node, coordinate, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const namespaceURI = parentNode.namespaceURI;\n  const properties = context['properties'];\n  //FIXME Projection handling\n  node.setAttributeNS(null, 'lat', String(coordinate[1]));\n  node.setAttributeNS(null, 'lon', String(coordinate[0]));\n  const geometryLayout = context['geometryLayout'];\n  switch (geometryLayout) {\n    case 'XYZM':\n      if (coordinate[3] !== 0) {\n        properties['time'] = coordinate[3];\n      }\n    // fall through\n    case 'XYZ':\n      if (coordinate[2] !== 0) {\n        properties['ele'] = coordinate[2];\n      }\n      break;\n    case 'XYM':\n      if (coordinate[2] !== 0) {\n        properties['time'] = coordinate[2];\n      }\n      break;\n    default:\n    // pass\n  }\n\n  const orderedKeys = node.nodeName == 'rtept' ? RTEPT_TYPE_SEQUENCE[namespaceURI] : WPT_TYPE_SEQUENCE[namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop( /** @type {import(\"../xml.js\").NodeStackItem} */\n  {\n    node: node,\n    'properties': properties\n  }, WPT_TYPE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeRte(node, feature, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */\n  objectStack[0];\n  const properties = feature.getProperties();\n  const context = {\n    node: node\n  };\n  context['properties'] = properties;\n  const geometry = feature.getGeometry();\n  if (geometry.getType() == 'LineString') {\n    const lineString = /** @type {LineString} */\n    transformGeometryWithOptions(geometry, true, options);\n    context['geometryLayout'] = lineString.getLayout();\n    properties['rtept'] = lineString.getCoordinates();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = RTE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, RTE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeTrk(node, feature, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */\n  objectStack[0];\n  const properties = feature.getProperties();\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const context = {\n    node: node\n  };\n  context['properties'] = properties;\n  const geometry = feature.getGeometry();\n  if (geometry.getType() == 'MultiLineString') {\n    const multiLineString = /** @type {MultiLineString} */\n    transformGeometryWithOptions(geometry, true, options);\n    properties['trkseg'] = multiLineString.getLineStrings();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = TRK_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, TRK_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n/**\n * @param {Element} node Node.\n * @param {LineString} lineString LineString.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeTrkSeg(node, lineString, objectStack) {\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const context = {\n    node: node\n  };\n  context['geometryLayout'] = lineString.getLayout();\n  context['properties'] = {};\n  pushSerializeAndPop(context, TRKSEG_SERIALIZERS, TRKSEG_NODE_FACTORY, lineString.getCoordinates(), objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeWpt(node, feature, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */\n  objectStack[0];\n  const context = objectStack[objectStack.length - 1];\n  context['properties'] = feature.getProperties();\n  const geometry = feature.getGeometry();\n  if (geometry.getType() == 'Point') {\n    const point = /** @type {Point} */\n    transformGeometryWithOptions(geometry, true, options);\n    context['geometryLayout'] = point.getLayout();\n    writeWptType(node, point.getCoordinates(), objectStack);\n  }\n}\nexport default GPX;","map":{"version":3,"names":["Feature","LineString","MultiLineString","Point","XMLFeature","OBJECT_PROPERTY_NODE_FACTORY","XML_SCHEMA_INSTANCE_URI","createElementNS","makeArrayPusher","makeArraySerializer","makeChildAppender","makeObjectPropertySetter","makeSequence","makeSimpleNodeFactory","makeStructureNS","parseNode","pushParseAndPop","pushSerializeAndPop","get","getProjection","readDateTime","readDecimal","readPositiveInteger","readString","writeDateTimeTextNode","writeDecimalTextNode","writeNonNegativeIntegerTextNode","writeStringTextNode","transformGeometryWithOptions","NAMESPACE_URIS","SCHEMA_LOCATION","FEATURE_READER","readRte","readTrk","readWpt","GPX_PARSERS","LINK_PARSERS","GPX_SERIALIZERS","writeRte","writeTrk","writeWpt","GPX","constructor","options","dataProjection","readExtensions_","readExtensions","handleReadExtensions_","features","i","ii","length","feature","extensionsNode","set","undefined","readFeatureFromNode","node","includes","namespaceURI","featureReader","localName","getReadOptions","readFeaturesFromNode","writeFeaturesNode","adaptOptions","gpx","xmlnsUri","setAttributeNS","setAttribute","GPX_NODE_FACTORY","RTE_PARSERS","parseLink","parseExtensions","parseRtePt","RTEPT_PARSERS","TRK_PARSERS","parseTrkSeg","TRKSEG_PARSERS","parseTrkPt","TRKPT_PARSERS","WPT_PARSERS","LINK_SEQUENCE","LINK_SERIALIZERS","RTE_SEQUENCE","RTE_SERIALIZERS","writeLink","writeWptType","RTEPT_TYPE_SEQUENCE","TRK_SEQUENCE","TRK_SERIALIZERS","writeTrkSeg","TRKSEG_NODE_FACTORY","TRKSEG_SERIALIZERS","WPT_TYPE_SEQUENCE","WPT_TYPE_SERIALIZERS","GEOMETRY_TYPE_TO_NODENAME","value","objectStack","nodeName","geometry","getGeometry","getType","parentNode","appendCoordinate","flatCoordinates","layoutOptions","values","push","parseFloat","getAttribute","hasZ","hasM","applyLayoutOptions","ends","layout","stride","href","rteValues","trkValues","setProperties","coordinates","context","properties","link","coordinate","String","geometryLayout","orderedKeys","getProperties","lineString","getLayout","getCoordinates","multiLineString","getLineStrings","point"],"sources":["/Users/lydiaprice/quake-text/Frontend/node_modules/ol/format/GPX.js"],"sourcesContent":["/**\n * @module ol/format/GPX\n */\nimport Feature from '../Feature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport Point from '../geom/Point.js';\nimport XMLFeature from './XMLFeature.js';\nimport {\n  OBJECT_PROPERTY_NODE_FACTORY,\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  makeArrayPusher,\n  makeArraySerializer,\n  makeChildAppender,\n  makeObjectPropertySetter,\n  makeSequence,\n  makeSimpleNodeFactory,\n  makeStructureNS,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  readDateTime,\n  readDecimal,\n  readPositiveInteger,\n  readString,\n  writeDateTimeTextNode,\n  writeDecimalTextNode,\n  writeNonNegativeIntegerTextNode,\n  writeStringTextNode,\n} from './xsd.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://www.topografix.com/GPX/1/0',\n  'http://www.topografix.com/GPX/1/1',\n];\n\n/**\n * @const\n * @type {string}\n */\nconst SCHEMA_LOCATION =\n  'http://www.topografix.com/GPX/1/1 ' +\n  'http://www.topografix.com/GPX/1/1/gpx.xsd';\n\n/**\n * @const\n * @type {Object<string, function(Node, Array<*>): (Feature|undefined)>}\n */\nconst FEATURE_READER = {\n  'rte': readRte,\n  'trk': readTrk,\n  'wpt': readWpt,\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GPX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'rte': makeArrayPusher(readRte),\n  'trk': makeArrayPusher(readTrk),\n  'wpt': makeArrayPusher(readWpt),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'text': makeObjectPropertySetter(readString, 'linkText'),\n  'type': makeObjectPropertySetter(readString, 'linkType'),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst GPX_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'rte': makeChildAppender(writeRte),\n  'trk': makeChildAppender(writeTrk),\n  'wpt': makeChildAppender(writeWpt),\n});\n\n/**\n * @typedef {Object} Options\n * @property {function(Feature, Node):void} [readExtensions] Callback function\n * to process `extensions` nodes. To prevent memory leaks, this callback function must\n * not store any references to the node. Note that the `extensions`\n * node is not allowed in GPX 1.0. Moreover, only `extensions`\n * nodes from `wpt`, `rte` and `trk` can be processed, as those are\n * directly mapped to a feature.\n */\n\n/**\n * @typedef {Object} LayoutOptions\n * @property {boolean} [hasZ] HasZ.\n * @property {boolean} [hasM] HasM.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GPX format.\n *\n * Note that {@link module:ol/format/GPX~GPX#readFeature} only reads the first\n * feature of the source.\n *\n * When reading, routes (`<rte>`) are converted into LineString geometries, and\n * tracks (`<trk>`) into MultiLineString. Any properties on route and track\n * waypoints are ignored.\n *\n * When writing, LineString geometries are output as routes (`<rte>`), and\n * MultiLineString as tracks (`<trk>`).\n *\n * @api\n */\nclass GPX extends XMLFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @type {function(Feature, Node): void|undefined}\n     * @private\n     */\n    this.readExtensions_ = options.readExtensions;\n  }\n\n  /**\n   * @param {Array<Feature>} features List of features.\n   * @private\n   */\n  handleReadExtensions_(features) {\n    if (!features) {\n      features = [];\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      const feature = features[i];\n      if (this.readExtensions_) {\n        const extensionsNode = feature.get('extensionsNode_') || null;\n        this.readExtensions_(feature, extensionsNode);\n      }\n      feature.set('extensionsNode_', undefined);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromNode(node, options) {\n    if (!NAMESPACE_URIS.includes(node.namespaceURI)) {\n      return null;\n    }\n    const featureReader = FEATURE_READER[node.localName];\n    if (!featureReader) {\n      return null;\n    }\n    const feature = featureReader(node, [this.getReadOptions(node, options)]);\n    if (!feature) {\n      return null;\n    }\n    this.handleReadExtensions_([feature]);\n    return feature;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    if (!NAMESPACE_URIS.includes(node.namespaceURI)) {\n      return [];\n    }\n    if (node.localName == 'gpx') {\n      /** @type {Array<Feature>} */\n      const features = pushParseAndPop([], GPX_PARSERS, node, [\n        this.getReadOptions(node, options),\n      ]);\n      if (features) {\n        this.handleReadExtensions_(features);\n        return features;\n      } else {\n        return [];\n      }\n    }\n    return [];\n  }\n\n  /**\n   * Encode an array of features in the GPX format as an XML node.\n   * LineString geometries are output as routes (`<rte>`), and MultiLineString\n   * as tracks (`<trk>`).\n   *\n   * @param {Array<Feature>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   * @api\n   */\n  writeFeaturesNode(features, options) {\n    options = this.adaptOptions(options);\n    //FIXME Serialize metadata\n    const gpx = createElementNS('http://www.topografix.com/GPX/1/1', 'gpx');\n    const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n    gpx.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n    gpx.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      SCHEMA_LOCATION\n    );\n    gpx.setAttribute('version', '1.1');\n    gpx.setAttribute('creator', 'OpenLayers');\n\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      ({node: gpx}),\n      GPX_SERIALIZERS,\n      GPX_NODE_FACTORY,\n      features,\n      [options]\n    );\n    return gpx;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst RTE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeObjectPropertySetter(readString),\n  'cmt': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'src': makeObjectPropertySetter(readString),\n  'link': parseLink,\n  'number': makeObjectPropertySetter(readPositiveInteger),\n  'extensions': parseExtensions,\n  'type': makeObjectPropertySetter(readString),\n  'rtept': parseRtePt,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst RTEPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeObjectPropertySetter(readDecimal),\n  'time': makeObjectPropertySetter(readDateTime),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TRK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeObjectPropertySetter(readString),\n  'cmt': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'src': makeObjectPropertySetter(readString),\n  'link': parseLink,\n  'number': makeObjectPropertySetter(readPositiveInteger),\n  'type': makeObjectPropertySetter(readString),\n  'extensions': parseExtensions,\n  'trkseg': parseTrkSeg,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TRKSEG_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'trkpt': parseTrkPt,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TRKPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeObjectPropertySetter(readDecimal),\n  'time': makeObjectPropertySetter(readDateTime),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst WPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeObjectPropertySetter(readDecimal),\n  'time': makeObjectPropertySetter(readDateTime),\n  'magvar': makeObjectPropertySetter(readDecimal),\n  'geoidheight': makeObjectPropertySetter(readDecimal),\n  'name': makeObjectPropertySetter(readString),\n  'cmt': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'src': makeObjectPropertySetter(readString),\n  'link': parseLink,\n  'sym': makeObjectPropertySetter(readString),\n  'type': makeObjectPropertySetter(readString),\n  'fix': makeObjectPropertySetter(readString),\n  'sat': makeObjectPropertySetter(readPositiveInteger),\n  'hdop': makeObjectPropertySetter(readDecimal),\n  'vdop': makeObjectPropertySetter(readDecimal),\n  'pdop': makeObjectPropertySetter(readDecimal),\n  'ageofdgpsdata': makeObjectPropertySetter(readDecimal),\n  'dgpsid': makeObjectPropertySetter(readPositiveInteger),\n  'extensions': parseExtensions,\n});\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst LINK_SEQUENCE = ['text', 'type'];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst LINK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'text': makeChildAppender(writeStringTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst RTE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'name',\n  'cmt',\n  'desc',\n  'src',\n  'link',\n  'number',\n  'type',\n  'rtept',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst RTE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeChildAppender(writeStringTextNode),\n  'cmt': makeChildAppender(writeStringTextNode),\n  'desc': makeChildAppender(writeStringTextNode),\n  'src': makeChildAppender(writeStringTextNode),\n  'link': makeChildAppender(writeLink),\n  'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n  'rtept': makeArraySerializer(makeChildAppender(writeWptType)),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst RTEPT_TYPE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['ele', 'time']);\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst TRK_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'name',\n  'cmt',\n  'desc',\n  'src',\n  'link',\n  'number',\n  'type',\n  'trkseg',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst TRK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeChildAppender(writeStringTextNode),\n  'cmt': makeChildAppender(writeStringTextNode),\n  'desc': makeChildAppender(writeStringTextNode),\n  'src': makeChildAppender(writeStringTextNode),\n  'link': makeChildAppender(writeLink),\n  'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n  'trkseg': makeArraySerializer(makeChildAppender(writeTrkSeg)),\n});\n\n/**\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst TRKSEG_NODE_FACTORY = makeSimpleNodeFactory('trkpt');\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst TRKSEG_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'trkpt': makeChildAppender(writeWptType),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst WPT_TYPE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'ele',\n  'time',\n  'magvar',\n  'geoidheight',\n  'name',\n  'cmt',\n  'desc',\n  'src',\n  'link',\n  'sym',\n  'type',\n  'fix',\n  'sat',\n  'hdop',\n  'vdop',\n  'pdop',\n  'ageofdgpsdata',\n  'dgpsid',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst WPT_TYPE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeChildAppender(writeDecimalTextNode),\n  'time': makeChildAppender(writeDateTimeTextNode),\n  'magvar': makeChildAppender(writeDecimalTextNode),\n  'geoidheight': makeChildAppender(writeDecimalTextNode),\n  'name': makeChildAppender(writeStringTextNode),\n  'cmt': makeChildAppender(writeStringTextNode),\n  'desc': makeChildAppender(writeStringTextNode),\n  'src': makeChildAppender(writeStringTextNode),\n  'link': makeChildAppender(writeLink),\n  'sym': makeChildAppender(writeStringTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n  'fix': makeChildAppender(writeStringTextNode),\n  'sat': makeChildAppender(writeNonNegativeIntegerTextNode),\n  'hdop': makeChildAppender(writeDecimalTextNode),\n  'vdop': makeChildAppender(writeDecimalTextNode),\n  'pdop': makeChildAppender(writeDecimalTextNode),\n  'ageofdgpsdata': makeChildAppender(writeDecimalTextNode),\n  'dgpsid': makeChildAppender(writeNonNegativeIntegerTextNode),\n});\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'wpt',\n  'LineString': 'rte',\n  'MultiLineString': 'trk',\n};\n\n/**\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nfunction GPX_NODE_FACTORY(value, objectStack, nodeName) {\n  const geometry = /** @type {Feature} */ (value).getGeometry();\n  if (geometry) {\n    const nodeName = GEOMETRY_TYPE_TO_NODENAME[geometry.getType()];\n    if (nodeName) {\n      const parentNode = objectStack[objectStack.length - 1].node;\n      return createElementNS(parentNode.namespaceURI, nodeName);\n    }\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {LayoutOptions} layoutOptions Layout options.\n * @param {Element} node Node.\n * @param {!Object} values Values.\n * @return {Array<number>} Flat coordinates.\n */\nfunction appendCoordinate(flatCoordinates, layoutOptions, node, values) {\n  flatCoordinates.push(\n    parseFloat(node.getAttribute('lon')),\n    parseFloat(node.getAttribute('lat'))\n  );\n  if ('ele' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['ele']));\n    delete values['ele'];\n    layoutOptions.hasZ = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  if ('time' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['time']));\n    delete values['time'];\n    layoutOptions.hasM = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  return flatCoordinates;\n}\n\n/**\n * Choose GeometryLayout based on flags in layoutOptions and adjust flatCoordinates\n * and ends arrays by shrinking them accordingly (removing unused zero entries).\n *\n * @param {LayoutOptions} layoutOptions Layout options.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {Array<number>} [ends] Ends.\n * @return {import(\"../geom/Geometry.js\").GeometryLayout} Layout.\n */\nfunction applyLayoutOptions(layoutOptions, flatCoordinates, ends) {\n  /** @type {import(\"../geom/Geometry.js\").GeometryLayout} */\n  let layout = 'XY';\n  let stride = 2;\n  if (layoutOptions.hasZ && layoutOptions.hasM) {\n    layout = 'XYZM';\n    stride = 4;\n  } else if (layoutOptions.hasZ) {\n    layout = 'XYZ';\n    stride = 3;\n  } else if (layoutOptions.hasM) {\n    layout = 'XYM';\n    stride = 3;\n  }\n  if (stride !== 4) {\n    for (let i = 0, ii = flatCoordinates.length / 4; i < ii; i++) {\n      flatCoordinates[i * stride] = flatCoordinates[i * 4];\n      flatCoordinates[i * stride + 1] = flatCoordinates[i * 4 + 1];\n      if (layoutOptions.hasZ) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 2];\n      }\n      if (layoutOptions.hasM) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 3];\n      }\n    }\n    flatCoordinates.length = (flatCoordinates.length / 4) * stride;\n    if (ends) {\n      for (let i = 0, ii = ends.length; i < ii; i++) {\n        ends[i] = (ends[i] / 4) * stride;\n      }\n    }\n  }\n  return layout;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseLink(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const href = node.getAttribute('href');\n  if (href !== null) {\n    values['link'] = href;\n  }\n  parseNode(LINK_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseExtensions(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values['extensionsNode_'] = node;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseRtePt(node, objectStack) {\n  const values = pushParseAndPop({}, RTEPT_PARSERS, node, objectStack);\n  if (values) {\n    const rteValues = /** @type {!Object} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const flatCoordinates = /** @type {Array<number>} */ (\n      rteValues['flatCoordinates']\n    );\n    const layoutOptions = /** @type {LayoutOptions} */ (\n      rteValues['layoutOptions']\n    );\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseTrkPt(node, objectStack) {\n  const values = pushParseAndPop({}, TRKPT_PARSERS, node, objectStack);\n  if (values) {\n    const trkValues = /** @type {!Object} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const flatCoordinates = /** @type {Array<number>} */ (\n      trkValues['flatCoordinates']\n    );\n    const layoutOptions = /** @type {LayoutOptions} */ (\n      trkValues['layoutOptions']\n    );\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseTrkSeg(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  parseNode(TRKSEG_PARSERS, node, objectStack);\n  const flatCoordinates =\n    /** @type {Array<number>} */\n    (values['flatCoordinates']);\n  const ends = /** @type {Array<number>} */ (values['ends']);\n  ends.push(flatCoordinates.length);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Track.\n */\nfunction readRte(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n    objectStack[0]\n  );\n  const values = pushParseAndPop(\n    {\n      'flatCoordinates': [],\n      'layoutOptions': {},\n    },\n    RTE_PARSERS,\n    node,\n    objectStack\n  );\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates =\n    /** @type {Array<number>} */\n    (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const layoutOptions = /** @type {LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = applyLayoutOptions(layoutOptions, flatCoordinates);\n  const geometry = new LineString(flatCoordinates, layout);\n  transformGeometryWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values, true);\n  return feature;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Track.\n */\nfunction readTrk(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n    objectStack[0]\n  );\n  const values = pushParseAndPop(\n    {\n      'flatCoordinates': [],\n      'ends': [],\n      'layoutOptions': {},\n    },\n    TRK_PARSERS,\n    node,\n    objectStack\n  );\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates =\n    /** @type {Array<number>} */\n    (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const ends = /** @type {Array<number>} */ (values['ends']);\n  delete values['ends'];\n  const layoutOptions = /** @type {LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = applyLayoutOptions(layoutOptions, flatCoordinates, ends);\n  const geometry = new MultiLineString(flatCoordinates, layout, ends);\n  transformGeometryWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values, true);\n  return feature;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Waypoint.\n */\nfunction readWpt(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n    objectStack[0]\n  );\n  const values = pushParseAndPop({}, WPT_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const layoutOptions = /** @type {LayoutOptions} */ ({});\n  const coordinates = appendCoordinate([], layoutOptions, node, values);\n  const layout = applyLayoutOptions(layoutOptions, coordinates);\n  const geometry = new Point(coordinates, layout);\n  transformGeometryWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values, true);\n  return feature;\n}\n\n/**\n * @param {Element} node Node.\n * @param {string} value Value for the link's `href` attribute.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeLink(node, value, objectStack) {\n  node.setAttribute('href', value);\n  const context = objectStack[objectStack.length - 1];\n  const properties = context['properties'];\n  const link = [properties['linkText'], properties['linkType']];\n  pushSerializeAndPop(\n    /** @type {import(\"../xml.js\").NodeStackItem} */ ({node: node}),\n    LINK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    link,\n    objectStack,\n    LINK_SEQUENCE\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeWptType(node, coordinate, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const namespaceURI = parentNode.namespaceURI;\n  const properties = context['properties'];\n  //FIXME Projection handling\n  node.setAttributeNS(null, 'lat', String(coordinate[1]));\n  node.setAttributeNS(null, 'lon', String(coordinate[0]));\n  const geometryLayout = context['geometryLayout'];\n  switch (geometryLayout) {\n    case 'XYZM':\n      if (coordinate[3] !== 0) {\n        properties['time'] = coordinate[3];\n      }\n    // fall through\n    case 'XYZ':\n      if (coordinate[2] !== 0) {\n        properties['ele'] = coordinate[2];\n      }\n      break;\n    case 'XYM':\n      if (coordinate[2] !== 0) {\n        properties['time'] = coordinate[2];\n      }\n      break;\n    default:\n    // pass\n  }\n  const orderedKeys =\n    node.nodeName == 'rtept'\n      ? RTEPT_TYPE_SEQUENCE[namespaceURI]\n      : WPT_TYPE_SEQUENCE[namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    ({node: node, 'properties': properties}),\n    WPT_TYPE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Node} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeRte(node, feature, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n    objectStack[0]\n  );\n  const properties = feature.getProperties();\n  const context = {node: node};\n  context['properties'] = properties;\n  const geometry = feature.getGeometry();\n  if (geometry.getType() == 'LineString') {\n    const lineString = /** @type {LineString} */ (\n      transformGeometryWithOptions(geometry, true, options)\n    );\n    context['geometryLayout'] = lineString.getLayout();\n    properties['rtept'] = lineString.getCoordinates();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = RTE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    RTE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeTrk(node, feature, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n    objectStack[0]\n  );\n  const properties = feature.getProperties();\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const context = {node: node};\n  context['properties'] = properties;\n  const geometry = feature.getGeometry();\n  if (geometry.getType() == 'MultiLineString') {\n    const multiLineString = /** @type {MultiLineString} */ (\n      transformGeometryWithOptions(geometry, true, options)\n    );\n    properties['trkseg'] = multiLineString.getLineStrings();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = TRK_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    TRK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {LineString} lineString LineString.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeTrkSeg(node, lineString, objectStack) {\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const context = {node: node};\n  context['geometryLayout'] = lineString.getLayout();\n  context['properties'] = {};\n  pushSerializeAndPop(\n    context,\n    TRKSEG_SERIALIZERS,\n    TRKSEG_NODE_FACTORY,\n    lineString.getCoordinates(),\n    objectStack\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeWpt(node, feature, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n    objectStack[0]\n  );\n  const context = objectStack[objectStack.length - 1];\n  context['properties'] = feature.getProperties();\n  const geometry = feature.getGeometry();\n  if (geometry.getType() == 'Point') {\n    const point = /** @type {Point} */ (\n      transformGeometryWithOptions(geometry, true, options)\n    );\n    context['geometryLayout'] = point.getLayout();\n    writeWptType(node, point.getCoordinates(), objectStack);\n  }\n}\n\nexport default GPX;\n"],"mappings":"AAAA;AACA;AACA;AACA,OAAOA,OAAO,MAAM,eAAe;AACnC,OAAOC,UAAU,MAAM,uBAAuB;AAC9C,OAAOC,eAAe,MAAM,4BAA4B;AACxD,OAAOC,KAAK,MAAM,kBAAkB;AACpC,OAAOC,UAAU,MAAM,iBAAiB;AACxC,SACEC,4BAA4B,EAC5BC,uBAAuB,EACvBC,eAAe,EACfC,eAAe,EACfC,mBAAmB,EACnBC,iBAAiB,EACjBC,wBAAwB,EACxBC,YAAY,EACZC,qBAAqB,EACrBC,eAAe,EACfC,SAAS,EACTC,eAAe,EACfC,mBAAmB,QACd,WAAW;AAClB,SAAQC,GAAG,IAAIC,aAAa,QAAO,YAAY;AAC/C,SACEC,YAAY,EACZC,WAAW,EACXC,mBAAmB,EACnBC,UAAU,EACVC,qBAAqB,EACrBC,oBAAoB,EACpBC,+BAA+B,EAC/BC,mBAAmB,QACd,UAAU;AACjB,SAAQC,4BAA4B,QAAO,cAAc;;AAEzD;AACA;AACA;AACA;AACA,MAAMC,cAAc,GAAG,CACrB,IAAI,EACJ,mCAAmC,EACnC,mCAAmC,CACpC;;AAED;AACA;AACA;AACA;AACA,MAAMC,eAAe,GACnB,oCAAoC,GACpC,2CAA2C;;AAE7C;AACA;AACA;AACA;AACA,MAAMC,cAAc,GAAG;EACrB,KAAK,EAAEC,OAAO;EACd,KAAK,EAAEC,OAAO;EACd,KAAK,EAAEC;AACT,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,MAAMC,WAAW,GAAGrB,eAAe,CAACe,cAAc,EAAE;EAClD,KAAK,EAAErB,eAAe,CAACwB,OAAO,CAAC;EAC/B,KAAK,EAAExB,eAAe,CAACyB,OAAO,CAAC;EAC/B,KAAK,EAAEzB,eAAe,CAAC0B,OAAO;AAChC,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA,MAAME,YAAY,GAAGtB,eAAe,CAACe,cAAc,EAAE;EACnD,MAAM,EAAElB,wBAAwB,CAACY,UAAU,EAAE,UAAU,CAAC;EACxD,MAAM,EAAEZ,wBAAwB,CAACY,UAAU,EAAE,UAAU;AACzD,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA,MAAMc,eAAe,GAAGvB,eAAe,CAACe,cAAc,EAAE;EACtD,KAAK,EAAEnB,iBAAiB,CAAC4B,QAAQ,CAAC;EAClC,KAAK,EAAE5B,iBAAiB,CAAC6B,QAAQ,CAAC;EAClC,KAAK,EAAE7B,iBAAiB,CAAC8B,QAAQ;AACnC,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,GAAG,SAASrC,UAAU,CAAC;EAC3B;AACF;AACA;EACEsC,WAAW,CAACC,OAAO,EAAE;IACnB,KAAK,EAAE;IAEPA,OAAO,GAAGA,OAAO,GAAGA,OAAO,GAAG,CAAC,CAAC;;IAEhC;AACJ;AACA;IACI,IAAI,CAACC,cAAc,GAAGzB,aAAa,CAAC,WAAW,CAAC;;IAEhD;AACJ;AACA;AACA;IACI,IAAI,CAAC0B,eAAe,GAAGF,OAAO,CAACG,cAAc;EAC/C;;EAEA;AACF;AACA;AACA;EACEC,qBAAqB,CAACC,QAAQ,EAAE;IAC9B,IAAI,CAACA,QAAQ,EAAE;MACbA,QAAQ,GAAG,EAAE;IACf;IACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEC,EAAE,GAAGF,QAAQ,CAACG,MAAM,EAAEF,CAAC,GAAGC,EAAE,EAAE,EAAED,CAAC,EAAE;MACjD,MAAMG,OAAO,GAAGJ,QAAQ,CAACC,CAAC,CAAC;MAC3B,IAAI,IAAI,CAACJ,eAAe,EAAE;QACxB,MAAMQ,cAAc,GAAGD,OAAO,CAAClC,GAAG,CAAC,iBAAiB,CAAC,IAAI,IAAI;QAC7D,IAAI,CAAC2B,eAAe,CAACO,OAAO,EAAEC,cAAc,CAAC;MAC/C;MACAD,OAAO,CAACE,GAAG,CAAC,iBAAiB,EAAEC,SAAS,CAAC;IAC3C;EACF;;EAEA;AACF;AACA;AACA;AACA;EACEC,mBAAmB,CAACC,IAAI,EAAEd,OAAO,EAAE;IACjC,IAAI,CAACd,cAAc,CAAC6B,QAAQ,CAACD,IAAI,CAACE,YAAY,CAAC,EAAE;MAC/C,OAAO,IAAI;IACb;IACA,MAAMC,aAAa,GAAG7B,cAAc,CAAC0B,IAAI,CAACI,SAAS,CAAC;IACpD,IAAI,CAACD,aAAa,EAAE;MAClB,OAAO,IAAI;IACb;IACA,MAAMR,OAAO,GAAGQ,aAAa,CAACH,IAAI,EAAE,CAAC,IAAI,CAACK,cAAc,CAACL,IAAI,EAAEd,OAAO,CAAC,CAAC,CAAC;IACzE,IAAI,CAACS,OAAO,EAAE;MACZ,OAAO,IAAI;IACb;IACA,IAAI,CAACL,qBAAqB,CAAC,CAACK,OAAO,CAAC,CAAC;IACrC,OAAOA,OAAO;EAChB;;EAEA;AACF;AACA;AACA;AACA;EACEW,oBAAoB,CAACN,IAAI,EAAEd,OAAO,EAAE;IAClC,IAAI,CAACd,cAAc,CAAC6B,QAAQ,CAACD,IAAI,CAACE,YAAY,CAAC,EAAE;MAC/C,OAAO,EAAE;IACX;IACA,IAAIF,IAAI,CAACI,SAAS,IAAI,KAAK,EAAE;MAC3B;MACA,MAAMb,QAAQ,GAAGhC,eAAe,CAAC,EAAE,EAAEmB,WAAW,EAAEsB,IAAI,EAAE,CACtD,IAAI,CAACK,cAAc,CAACL,IAAI,EAAEd,OAAO,CAAC,CACnC,CAAC;MACF,IAAIK,QAAQ,EAAE;QACZ,IAAI,CAACD,qBAAqB,CAACC,QAAQ,CAAC;QACpC,OAAOA,QAAQ;MACjB,CAAC,MAAM;QACL,OAAO,EAAE;MACX;IACF;IACA,OAAO,EAAE;EACX;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEgB,iBAAiB,CAAChB,QAAQ,EAAEL,OAAO,EAAE;IACnCA,OAAO,GAAG,IAAI,CAACsB,YAAY,CAACtB,OAAO,CAAC;IACpC;IACA,MAAMuB,GAAG,GAAG3D,eAAe,CAAC,mCAAmC,EAAE,KAAK,CAAC;IACvE,MAAM4D,QAAQ,GAAG,+BAA+B;IAChDD,GAAG,CAACE,cAAc,CAACD,QAAQ,EAAE,WAAW,EAAE7D,uBAAuB,CAAC;IAClE4D,GAAG,CAACE,cAAc,CAChB9D,uBAAuB,EACvB,oBAAoB,EACpBwB,eAAe,CAChB;IACDoC,GAAG,CAACG,YAAY,CAAC,SAAS,EAAE,KAAK,CAAC;IAClCH,GAAG,CAACG,YAAY,CAAC,SAAS,EAAE,YAAY,CAAC;IAEzCpD,mBAAmB,EACjB;IACC;MAACwC,IAAI,EAAES;IAAG,CAAC,EACZ7B,eAAe,EACfiC,gBAAgB,EAChBtB,QAAQ,EACR,CAACL,OAAO,CAAC,CACV;IACD,OAAOuB,GAAG;EACZ;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAMK,WAAW,GAAGzD,eAAe,CAACe,cAAc,EAAE;EAClD,MAAM,EAAElB,wBAAwB,CAACY,UAAU,CAAC;EAC5C,KAAK,EAAEZ,wBAAwB,CAACY,UAAU,CAAC;EAC3C,MAAM,EAAEZ,wBAAwB,CAACY,UAAU,CAAC;EAC5C,KAAK,EAAEZ,wBAAwB,CAACY,UAAU,CAAC;EAC3C,MAAM,EAAEiD,SAAS;EACjB,QAAQ,EAAE7D,wBAAwB,CAACW,mBAAmB,CAAC;EACvD,YAAY,EAAEmD,eAAe;EAC7B,MAAM,EAAE9D,wBAAwB,CAACY,UAAU,CAAC;EAC5C,OAAO,EAAEmD;AACX,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA,MAAMC,aAAa,GAAG7D,eAAe,CAACe,cAAc,EAAE;EACpD,KAAK,EAAElB,wBAAwB,CAACU,WAAW,CAAC;EAC5C,MAAM,EAAEV,wBAAwB,CAACS,YAAY;AAC/C,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA,MAAMwD,WAAW,GAAG9D,eAAe,CAACe,cAAc,EAAE;EAClD,MAAM,EAAElB,wBAAwB,CAACY,UAAU,CAAC;EAC5C,KAAK,EAAEZ,wBAAwB,CAACY,UAAU,CAAC;EAC3C,MAAM,EAAEZ,wBAAwB,CAACY,UAAU,CAAC;EAC5C,KAAK,EAAEZ,wBAAwB,CAACY,UAAU,CAAC;EAC3C,MAAM,EAAEiD,SAAS;EACjB,QAAQ,EAAE7D,wBAAwB,CAACW,mBAAmB,CAAC;EACvD,MAAM,EAAEX,wBAAwB,CAACY,UAAU,CAAC;EAC5C,YAAY,EAAEkD,eAAe;EAC7B,QAAQ,EAAEI;AACZ,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA,MAAMC,cAAc,GAAGhE,eAAe,CAACe,cAAc,EAAE;EACrD,OAAO,EAAEkD;AACX,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA,MAAMC,aAAa,GAAGlE,eAAe,CAACe,cAAc,EAAE;EACpD,KAAK,EAAElB,wBAAwB,CAACU,WAAW,CAAC;EAC5C,MAAM,EAAEV,wBAAwB,CAACS,YAAY;AAC/C,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA,MAAM6D,WAAW,GAAGnE,eAAe,CAACe,cAAc,EAAE;EAClD,KAAK,EAAElB,wBAAwB,CAACU,WAAW,CAAC;EAC5C,MAAM,EAAEV,wBAAwB,CAACS,YAAY,CAAC;EAC9C,QAAQ,EAAET,wBAAwB,CAACU,WAAW,CAAC;EAC/C,aAAa,EAAEV,wBAAwB,CAACU,WAAW,CAAC;EACpD,MAAM,EAAEV,wBAAwB,CAACY,UAAU,CAAC;EAC5C,KAAK,EAAEZ,wBAAwB,CAACY,UAAU,CAAC;EAC3C,MAAM,EAAEZ,wBAAwB,CAACY,UAAU,CAAC;EAC5C,KAAK,EAAEZ,wBAAwB,CAACY,UAAU,CAAC;EAC3C,MAAM,EAAEiD,SAAS;EACjB,KAAK,EAAE7D,wBAAwB,CAACY,UAAU,CAAC;EAC3C,MAAM,EAAEZ,wBAAwB,CAACY,UAAU,CAAC;EAC5C,KAAK,EAAEZ,wBAAwB,CAACY,UAAU,CAAC;EAC3C,KAAK,EAAEZ,wBAAwB,CAACW,mBAAmB,CAAC;EACpD,MAAM,EAAEX,wBAAwB,CAACU,WAAW,CAAC;EAC7C,MAAM,EAAEV,wBAAwB,CAACU,WAAW,CAAC;EAC7C,MAAM,EAAEV,wBAAwB,CAACU,WAAW,CAAC;EAC7C,eAAe,EAAEV,wBAAwB,CAACU,WAAW,CAAC;EACtD,QAAQ,EAAEV,wBAAwB,CAACW,mBAAmB,CAAC;EACvD,YAAY,EAAEmD;AAChB,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA,MAAMS,aAAa,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC;;AAEtC;AACA;AACA;AACA;AACA;AACA,MAAMC,gBAAgB,GAAGrE,eAAe,CAACe,cAAc,EAAE;EACvD,MAAM,EAAEnB,iBAAiB,CAACiB,mBAAmB,CAAC;EAC9C,MAAM,EAAEjB,iBAAiB,CAACiB,mBAAmB;AAC/C,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA,MAAMyD,YAAY,GAAGtE,eAAe,CAACe,cAAc,EAAE,CACnD,MAAM,EACN,KAAK,EACL,MAAM,EACN,KAAK,EACL,MAAM,EACN,QAAQ,EACR,MAAM,EACN,OAAO,CACR,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA,MAAMwD,eAAe,GAAGvE,eAAe,CAACe,cAAc,EAAE;EACtD,MAAM,EAAEnB,iBAAiB,CAACiB,mBAAmB,CAAC;EAC9C,KAAK,EAAEjB,iBAAiB,CAACiB,mBAAmB,CAAC;EAC7C,MAAM,EAAEjB,iBAAiB,CAACiB,mBAAmB,CAAC;EAC9C,KAAK,EAAEjB,iBAAiB,CAACiB,mBAAmB,CAAC;EAC7C,MAAM,EAAEjB,iBAAiB,CAAC4E,SAAS,CAAC;EACpC,QAAQ,EAAE5E,iBAAiB,CAACgB,+BAA+B,CAAC;EAC5D,MAAM,EAAEhB,iBAAiB,CAACiB,mBAAmB,CAAC;EAC9C,OAAO,EAAElB,mBAAmB,CAACC,iBAAiB,CAAC6E,YAAY,CAAC;AAC9D,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA,MAAMC,mBAAmB,GAAG1E,eAAe,CAACe,cAAc,EAAE,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;;AAE5E;AACA;AACA;AACA;AACA;AACA,MAAM4D,YAAY,GAAG3E,eAAe,CAACe,cAAc,EAAE,CACnD,MAAM,EACN,KAAK,EACL,MAAM,EACN,KAAK,EACL,MAAM,EACN,QAAQ,EACR,MAAM,EACN,QAAQ,CACT,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA,MAAM6D,eAAe,GAAG5E,eAAe,CAACe,cAAc,EAAE;EACtD,MAAM,EAAEnB,iBAAiB,CAACiB,mBAAmB,CAAC;EAC9C,KAAK,EAAEjB,iBAAiB,CAACiB,mBAAmB,CAAC;EAC7C,MAAM,EAAEjB,iBAAiB,CAACiB,mBAAmB,CAAC;EAC9C,KAAK,EAAEjB,iBAAiB,CAACiB,mBAAmB,CAAC;EAC7C,MAAM,EAAEjB,iBAAiB,CAAC4E,SAAS,CAAC;EACpC,QAAQ,EAAE5E,iBAAiB,CAACgB,+BAA+B,CAAC;EAC5D,MAAM,EAAEhB,iBAAiB,CAACiB,mBAAmB,CAAC;EAC9C,QAAQ,EAAElB,mBAAmB,CAACC,iBAAiB,CAACiF,WAAW,CAAC;AAC9D,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA,MAAMC,mBAAmB,GAAG/E,qBAAqB,CAAC,OAAO,CAAC;;AAE1D;AACA;AACA;AACA;AACA;AACA,MAAMgF,kBAAkB,GAAG/E,eAAe,CAACe,cAAc,EAAE;EACzD,OAAO,EAAEnB,iBAAiB,CAAC6E,YAAY;AACzC,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA,MAAMO,iBAAiB,GAAGhF,eAAe,CAACe,cAAc,EAAE,CACxD,KAAK,EACL,MAAM,EACN,QAAQ,EACR,aAAa,EACb,MAAM,EACN,KAAK,EACL,MAAM,EACN,KAAK,EACL,MAAM,EACN,KAAK,EACL,MAAM,EACN,KAAK,EACL,KAAK,EACL,MAAM,EACN,MAAM,EACN,MAAM,EACN,eAAe,EACf,QAAQ,CACT,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA,MAAMkE,oBAAoB,GAAGjF,eAAe,CAACe,cAAc,EAAE;EAC3D,KAAK,EAAEnB,iBAAiB,CAACe,oBAAoB,CAAC;EAC9C,MAAM,EAAEf,iBAAiB,CAACc,qBAAqB,CAAC;EAChD,QAAQ,EAAEd,iBAAiB,CAACe,oBAAoB,CAAC;EACjD,aAAa,EAAEf,iBAAiB,CAACe,oBAAoB,CAAC;EACtD,MAAM,EAAEf,iBAAiB,CAACiB,mBAAmB,CAAC;EAC9C,KAAK,EAAEjB,iBAAiB,CAACiB,mBAAmB,CAAC;EAC7C,MAAM,EAAEjB,iBAAiB,CAACiB,mBAAmB,CAAC;EAC9C,KAAK,EAAEjB,iBAAiB,CAACiB,mBAAmB,CAAC;EAC7C,MAAM,EAAEjB,iBAAiB,CAAC4E,SAAS,CAAC;EACpC,KAAK,EAAE5E,iBAAiB,CAACiB,mBAAmB,CAAC;EAC7C,MAAM,EAAEjB,iBAAiB,CAACiB,mBAAmB,CAAC;EAC9C,KAAK,EAAEjB,iBAAiB,CAACiB,mBAAmB,CAAC;EAC7C,KAAK,EAAEjB,iBAAiB,CAACgB,+BAA+B,CAAC;EACzD,MAAM,EAAEhB,iBAAiB,CAACe,oBAAoB,CAAC;EAC/C,MAAM,EAAEf,iBAAiB,CAACe,oBAAoB,CAAC;EAC/C,MAAM,EAAEf,iBAAiB,CAACe,oBAAoB,CAAC;EAC/C,eAAe,EAAEf,iBAAiB,CAACe,oBAAoB,CAAC;EACxD,QAAQ,EAAEf,iBAAiB,CAACgB,+BAA+B;AAC7D,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA,MAAMsE,yBAAyB,GAAG;EAChC,OAAO,EAAE,KAAK;EACd,YAAY,EAAE,KAAK;EACnB,iBAAiB,EAAE;AACrB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,SAAS1B,gBAAgB,CAAC2B,KAAK,EAAEC,WAAW,EAAEC,QAAQ,EAAE;EACtD,MAAMC,QAAQ,GAAG,sBAAwBH,KAAK,CAAEI,WAAW,EAAE;EAC7D,IAAID,QAAQ,EAAE;IACZ,MAAMD,QAAQ,GAAGH,yBAAyB,CAACI,QAAQ,CAACE,OAAO,EAAE,CAAC;IAC9D,IAAIH,QAAQ,EAAE;MACZ,MAAMI,UAAU,GAAGL,WAAW,CAACA,WAAW,CAAC/C,MAAM,GAAG,CAAC,CAAC,CAACM,IAAI;MAC3D,OAAOlD,eAAe,CAACgG,UAAU,CAAC5C,YAAY,EAAEwC,QAAQ,CAAC;IAC3D;EACF;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASK,gBAAgB,CAACC,eAAe,EAAEC,aAAa,EAAEjD,IAAI,EAAEkD,MAAM,EAAE;EACtEF,eAAe,CAACG,IAAI,CAClBC,UAAU,CAACpD,IAAI,CAACqD,YAAY,CAAC,KAAK,CAAC,CAAC,EACpCD,UAAU,CAACpD,IAAI,CAACqD,YAAY,CAAC,KAAK,CAAC,CAAC,CACrC;EACD,IAAI,KAAK,IAAIH,MAAM,EAAE;IACnBF,eAAe,CAACG,IAAI,EAAC,qBAAuBD,MAAM,CAAC,KAAK,CAAC,CAAE;IAC3D,OAAOA,MAAM,CAAC,KAAK,CAAC;IACpBD,aAAa,CAACK,IAAI,GAAG,IAAI;EAC3B,CAAC,MAAM;IACLN,eAAe,CAACG,IAAI,CAAC,CAAC,CAAC;EACzB;EACA,IAAI,MAAM,IAAID,MAAM,EAAE;IACpBF,eAAe,CAACG,IAAI,EAAC,qBAAuBD,MAAM,CAAC,MAAM,CAAC,CAAE;IAC5D,OAAOA,MAAM,CAAC,MAAM,CAAC;IACrBD,aAAa,CAACM,IAAI,GAAG,IAAI;EAC3B,CAAC,MAAM;IACLP,eAAe,CAACG,IAAI,CAAC,CAAC,CAAC;EACzB;EACA,OAAOH,eAAe;AACxB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASQ,kBAAkB,CAACP,aAAa,EAAED,eAAe,EAAES,IAAI,EAAE;EAChE;EACA,IAAIC,MAAM,GAAG,IAAI;EACjB,IAAIC,MAAM,GAAG,CAAC;EACd,IAAIV,aAAa,CAACK,IAAI,IAAIL,aAAa,CAACM,IAAI,EAAE;IAC5CG,MAAM,GAAG,MAAM;IACfC,MAAM,GAAG,CAAC;EACZ,CAAC,MAAM,IAAIV,aAAa,CAACK,IAAI,EAAE;IAC7BI,MAAM,GAAG,KAAK;IACdC,MAAM,GAAG,CAAC;EACZ,CAAC,MAAM,IAAIV,aAAa,CAACM,IAAI,EAAE;IAC7BG,MAAM,GAAG,KAAK;IACdC,MAAM,GAAG,CAAC;EACZ;EACA,IAAIA,MAAM,KAAK,CAAC,EAAE;IAChB,KAAK,IAAInE,CAAC,GAAG,CAAC,EAAEC,EAAE,GAAGuD,eAAe,CAACtD,MAAM,GAAG,CAAC,EAAEF,CAAC,GAAGC,EAAE,EAAED,CAAC,EAAE,EAAE;MAC5DwD,eAAe,CAACxD,CAAC,GAAGmE,MAAM,CAAC,GAAGX,eAAe,CAACxD,CAAC,GAAG,CAAC,CAAC;MACpDwD,eAAe,CAACxD,CAAC,GAAGmE,MAAM,GAAG,CAAC,CAAC,GAAGX,eAAe,CAACxD,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;MAC5D,IAAIyD,aAAa,CAACK,IAAI,EAAE;QACtBN,eAAe,CAACxD,CAAC,GAAGmE,MAAM,GAAG,CAAC,CAAC,GAAGX,eAAe,CAACxD,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;MAC9D;MACA,IAAIyD,aAAa,CAACM,IAAI,EAAE;QACtBP,eAAe,CAACxD,CAAC,GAAGmE,MAAM,GAAG,CAAC,CAAC,GAAGX,eAAe,CAACxD,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;MAC9D;IACF;IACAwD,eAAe,CAACtD,MAAM,GAAIsD,eAAe,CAACtD,MAAM,GAAG,CAAC,GAAIiE,MAAM;IAC9D,IAAIF,IAAI,EAAE;MACR,KAAK,IAAIjE,CAAC,GAAG,CAAC,EAAEC,EAAE,GAAGgE,IAAI,CAAC/D,MAAM,EAAEF,CAAC,GAAGC,EAAE,EAAED,CAAC,EAAE,EAAE;QAC7CiE,IAAI,CAACjE,CAAC,CAAC,GAAIiE,IAAI,CAACjE,CAAC,CAAC,GAAG,CAAC,GAAImE,MAAM;MAClC;IACF;EACF;EACA,OAAOD,MAAM;AACf;;AAEA;AACA;AACA;AACA;AACA,SAAS3C,SAAS,CAACf,IAAI,EAAEyC,WAAW,EAAE;EACpC,MAAMS,MAAM,GAAG,qBAAuBT,WAAW,CAACA,WAAW,CAAC/C,MAAM,GAAG,CAAC,CAAE;EAC1E,MAAMkE,IAAI,GAAG5D,IAAI,CAACqD,YAAY,CAAC,MAAM,CAAC;EACtC,IAAIO,IAAI,KAAK,IAAI,EAAE;IACjBV,MAAM,CAAC,MAAM,CAAC,GAAGU,IAAI;EACvB;EACAtG,SAAS,CAACqB,YAAY,EAAEqB,IAAI,EAAEyC,WAAW,CAAC;AAC5C;;AAEA;AACA;AACA;AACA;AACA,SAASzB,eAAe,CAAChB,IAAI,EAAEyC,WAAW,EAAE;EAC1C,MAAMS,MAAM,GAAG,qBAAuBT,WAAW,CAACA,WAAW,CAAC/C,MAAM,GAAG,CAAC,CAAE;EAC1EwD,MAAM,CAAC,iBAAiB,CAAC,GAAGlD,IAAI;AAClC;;AAEA;AACA;AACA;AACA;AACA,SAASiB,UAAU,CAACjB,IAAI,EAAEyC,WAAW,EAAE;EACrC,MAAMS,MAAM,GAAG3F,eAAe,CAAC,CAAC,CAAC,EAAE2D,aAAa,EAAElB,IAAI,EAAEyC,WAAW,CAAC;EACpE,IAAIS,MAAM,EAAE;IACV,MAAMW,SAAS,GAAG;IAChBpB,WAAW,CAACA,WAAW,CAAC/C,MAAM,GAAG,CAAC,CACnC;IACD,MAAMsD,eAAe,GAAG;IACtBa,SAAS,CAAC,iBAAiB,CAC5B;IACD,MAAMZ,aAAa,GAAG;IACpBY,SAAS,CAAC,eAAe,CAC1B;IACDd,gBAAgB,CAACC,eAAe,EAAEC,aAAa,EAAEjD,IAAI,EAAEkD,MAAM,CAAC;EAChE;AACF;;AAEA;AACA;AACA;AACA;AACA,SAAS5B,UAAU,CAACtB,IAAI,EAAEyC,WAAW,EAAE;EACrC,MAAMS,MAAM,GAAG3F,eAAe,CAAC,CAAC,CAAC,EAAEgE,aAAa,EAAEvB,IAAI,EAAEyC,WAAW,CAAC;EACpE,IAAIS,MAAM,EAAE;IACV,MAAMY,SAAS,GAAG;IAChBrB,WAAW,CAACA,WAAW,CAAC/C,MAAM,GAAG,CAAC,CACnC;IACD,MAAMsD,eAAe,GAAG;IACtBc,SAAS,CAAC,iBAAiB,CAC5B;IACD,MAAMb,aAAa,GAAG;IACpBa,SAAS,CAAC,eAAe,CAC1B;IACDf,gBAAgB,CAACC,eAAe,EAAEC,aAAa,EAAEjD,IAAI,EAAEkD,MAAM,CAAC;EAChE;AACF;;AAEA;AACA;AACA;AACA;AACA,SAAS9B,WAAW,CAACpB,IAAI,EAAEyC,WAAW,EAAE;EACtC,MAAMS,MAAM,GAAG,qBAAuBT,WAAW,CAACA,WAAW,CAAC/C,MAAM,GAAG,CAAC,CAAE;EAC1EpC,SAAS,CAAC+D,cAAc,EAAErB,IAAI,EAAEyC,WAAW,CAAC;EAC5C,MAAMO,eAAe,GACnB;EACCE,MAAM,CAAC,iBAAiB,CAAE;EAC7B,MAAMO,IAAI,GAAG,4BAA8BP,MAAM,CAAC,MAAM,CAAE;EAC1DO,IAAI,CAACN,IAAI,CAACH,eAAe,CAACtD,MAAM,CAAC;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASnB,OAAO,CAACyB,IAAI,EAAEyC,WAAW,EAAE;EAClC,MAAMvD,OAAO,GAAG;EACduD,WAAW,CAAC,CAAC,CACd;EACD,MAAMS,MAAM,GAAG3F,eAAe,CAC5B;IACE,iBAAiB,EAAE,EAAE;IACrB,eAAe,EAAE,CAAC;EACpB,CAAC,EACDuD,WAAW,EACXd,IAAI,EACJyC,WAAW,CACZ;EACD,IAAI,CAACS,MAAM,EAAE;IACX,OAAOpD,SAAS;EAClB;EACA,MAAMkD,eAAe,GACnB;EACCE,MAAM,CAAC,iBAAiB,CAAE;EAC7B,OAAOA,MAAM,CAAC,iBAAiB,CAAC;EAChC,MAAMD,aAAa,GAAG,4BAA8BC,MAAM,CAAC,eAAe,CAAE;EAC5E,OAAOA,MAAM,CAAC,eAAe,CAAC;EAC9B,MAAMQ,MAAM,GAAGF,kBAAkB,CAACP,aAAa,EAAED,eAAe,CAAC;EACjE,MAAML,QAAQ,GAAG,IAAInG,UAAU,CAACwG,eAAe,EAAEU,MAAM,CAAC;EACxDvF,4BAA4B,CAACwE,QAAQ,EAAE,KAAK,EAAEzD,OAAO,CAAC;EACtD,MAAMS,OAAO,GAAG,IAAIpD,OAAO,CAACoG,QAAQ,CAAC;EACrChD,OAAO,CAACoE,aAAa,CAACb,MAAM,EAAE,IAAI,CAAC;EACnC,OAAOvD,OAAO;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASnB,OAAO,CAACwB,IAAI,EAAEyC,WAAW,EAAE;EAClC,MAAMvD,OAAO,GAAG;EACduD,WAAW,CAAC,CAAC,CACd;EACD,MAAMS,MAAM,GAAG3F,eAAe,CAC5B;IACE,iBAAiB,EAAE,EAAE;IACrB,MAAM,EAAE,EAAE;IACV,eAAe,EAAE,CAAC;EACpB,CAAC,EACD4D,WAAW,EACXnB,IAAI,EACJyC,WAAW,CACZ;EACD,IAAI,CAACS,MAAM,EAAE;IACX,OAAOpD,SAAS;EAClB;EACA,MAAMkD,eAAe,GACnB;EACCE,MAAM,CAAC,iBAAiB,CAAE;EAC7B,OAAOA,MAAM,CAAC,iBAAiB,CAAC;EAChC,MAAMO,IAAI,GAAG,4BAA8BP,MAAM,CAAC,MAAM,CAAE;EAC1D,OAAOA,MAAM,CAAC,MAAM,CAAC;EACrB,MAAMD,aAAa,GAAG,4BAA8BC,MAAM,CAAC,eAAe,CAAE;EAC5E,OAAOA,MAAM,CAAC,eAAe,CAAC;EAC9B,MAAMQ,MAAM,GAAGF,kBAAkB,CAACP,aAAa,EAAED,eAAe,EAAES,IAAI,CAAC;EACvE,MAAMd,QAAQ,GAAG,IAAIlG,eAAe,CAACuG,eAAe,EAAEU,MAAM,EAAED,IAAI,CAAC;EACnEtF,4BAA4B,CAACwE,QAAQ,EAAE,KAAK,EAAEzD,OAAO,CAAC;EACtD,MAAMS,OAAO,GAAG,IAAIpD,OAAO,CAACoG,QAAQ,CAAC;EACrChD,OAAO,CAACoE,aAAa,CAACb,MAAM,EAAE,IAAI,CAAC;EACnC,OAAOvD,OAAO;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASlB,OAAO,CAACuB,IAAI,EAAEyC,WAAW,EAAE;EAClC,MAAMvD,OAAO,GAAG;EACduD,WAAW,CAAC,CAAC,CACd;EACD,MAAMS,MAAM,GAAG3F,eAAe,CAAC,CAAC,CAAC,EAAEiE,WAAW,EAAExB,IAAI,EAAEyC,WAAW,CAAC;EAClE,IAAI,CAACS,MAAM,EAAE;IACX,OAAOpD,SAAS;EAClB;EACA,MAAMmD,aAAa,GAAG,4BAA8B,CAAC,CAAE;EACvD,MAAMe,WAAW,GAAGjB,gBAAgB,CAAC,EAAE,EAAEE,aAAa,EAAEjD,IAAI,EAAEkD,MAAM,CAAC;EACrE,MAAMQ,MAAM,GAAGF,kBAAkB,CAACP,aAAa,EAAEe,WAAW,CAAC;EAC7D,MAAMrB,QAAQ,GAAG,IAAIjG,KAAK,CAACsH,WAAW,EAAEN,MAAM,CAAC;EAC/CvF,4BAA4B,CAACwE,QAAQ,EAAE,KAAK,EAAEzD,OAAO,CAAC;EACtD,MAAMS,OAAO,GAAG,IAAIpD,OAAO,CAACoG,QAAQ,CAAC;EACrChD,OAAO,CAACoE,aAAa,CAACb,MAAM,EAAE,IAAI,CAAC;EACnC,OAAOvD,OAAO;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASkC,SAAS,CAAC7B,IAAI,EAAEwC,KAAK,EAAEC,WAAW,EAAE;EAC3CzC,IAAI,CAACY,YAAY,CAAC,MAAM,EAAE4B,KAAK,CAAC;EAChC,MAAMyB,OAAO,GAAGxB,WAAW,CAACA,WAAW,CAAC/C,MAAM,GAAG,CAAC,CAAC;EACnD,MAAMwE,UAAU,GAAGD,OAAO,CAAC,YAAY,CAAC;EACxC,MAAME,IAAI,GAAG,CAACD,UAAU,CAAC,UAAU,CAAC,EAAEA,UAAU,CAAC,UAAU,CAAC,CAAC;EAC7D1G,mBAAmB,EACjB,gDAAkD;IAACwC,IAAI,EAAEA;EAAI,CAAC,EAC9D0B,gBAAgB,EAChB9E,4BAA4B,EAC5BuH,IAAI,EACJ1B,WAAW,EACXhB,aAAa,CACd;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASK,YAAY,CAAC9B,IAAI,EAAEoE,UAAU,EAAE3B,WAAW,EAAE;EACnD,MAAMwB,OAAO,GAAGxB,WAAW,CAACA,WAAW,CAAC/C,MAAM,GAAG,CAAC,CAAC;EACnD,MAAMoD,UAAU,GAAGmB,OAAO,CAACjE,IAAI;EAC/B,MAAME,YAAY,GAAG4C,UAAU,CAAC5C,YAAY;EAC5C,MAAMgE,UAAU,GAAGD,OAAO,CAAC,YAAY,CAAC;EACxC;EACAjE,IAAI,CAACW,cAAc,CAAC,IAAI,EAAE,KAAK,EAAE0D,MAAM,CAACD,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;EACvDpE,IAAI,CAACW,cAAc,CAAC,IAAI,EAAE,KAAK,EAAE0D,MAAM,CAACD,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;EACvD,MAAME,cAAc,GAAGL,OAAO,CAAC,gBAAgB,CAAC;EAChD,QAAQK,cAAc;IACpB,KAAK,MAAM;MACT,IAAIF,UAAU,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;QACvBF,UAAU,CAAC,MAAM,CAAC,GAAGE,UAAU,CAAC,CAAC,CAAC;MACpC;IACF;IACA,KAAK,KAAK;MACR,IAAIA,UAAU,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;QACvBF,UAAU,CAAC,KAAK,CAAC,GAAGE,UAAU,CAAC,CAAC,CAAC;MACnC;MACA;IACF,KAAK,KAAK;MACR,IAAIA,UAAU,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;QACvBF,UAAU,CAAC,MAAM,CAAC,GAAGE,UAAU,CAAC,CAAC,CAAC;MACpC;MACA;IACF;IACA;EAAA;;EAEF,MAAMG,WAAW,GACfvE,IAAI,CAAC0C,QAAQ,IAAI,OAAO,GACpBX,mBAAmB,CAAC7B,YAAY,CAAC,GACjCmC,iBAAiB,CAACnC,YAAY,CAAC;EACrC,MAAMgD,MAAM,GAAG/F,YAAY,CAAC+G,UAAU,EAAEK,WAAW,CAAC;EACpD/G,mBAAmB,EACjB;EACC;IAACwC,IAAI,EAAEA,IAAI;IAAE,YAAY,EAAEkE;EAAU,CAAC,EACvC5B,oBAAoB,EACpB1F,4BAA4B,EAC5BsG,MAAM,EACNT,WAAW,EACX8B,WAAW,CACZ;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS1F,QAAQ,CAACmB,IAAI,EAAEL,OAAO,EAAE8C,WAAW,EAAE;EAC5C,MAAMvD,OAAO,GAAG;EACduD,WAAW,CAAC,CAAC,CACd;EACD,MAAMyB,UAAU,GAAGvE,OAAO,CAAC6E,aAAa,EAAE;EAC1C,MAAMP,OAAO,GAAG;IAACjE,IAAI,EAAEA;EAAI,CAAC;EAC5BiE,OAAO,CAAC,YAAY,CAAC,GAAGC,UAAU;EAClC,MAAMvB,QAAQ,GAAGhD,OAAO,CAACiD,WAAW,EAAE;EACtC,IAAID,QAAQ,CAACE,OAAO,EAAE,IAAI,YAAY,EAAE;IACtC,MAAM4B,UAAU,GAAG;IACjBtG,4BAA4B,CAACwE,QAAQ,EAAE,IAAI,EAAEzD,OAAO,CACrD;IACD+E,OAAO,CAAC,gBAAgB,CAAC,GAAGQ,UAAU,CAACC,SAAS,EAAE;IAClDR,UAAU,CAAC,OAAO,CAAC,GAAGO,UAAU,CAACE,cAAc,EAAE;EACnD;EACA,MAAM7B,UAAU,GAAGL,WAAW,CAACA,WAAW,CAAC/C,MAAM,GAAG,CAAC,CAAC,CAACM,IAAI;EAC3D,MAAMuE,WAAW,GAAG5C,YAAY,CAACmB,UAAU,CAAC5C,YAAY,CAAC;EACzD,MAAMgD,MAAM,GAAG/F,YAAY,CAAC+G,UAAU,EAAEK,WAAW,CAAC;EACpD/G,mBAAmB,CACjByG,OAAO,EACPrC,eAAe,EACfhF,4BAA4B,EAC5BsG,MAAM,EACNT,WAAW,EACX8B,WAAW,CACZ;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASzF,QAAQ,CAACkB,IAAI,EAAEL,OAAO,EAAE8C,WAAW,EAAE;EAC5C,MAAMvD,OAAO,GAAG;EACduD,WAAW,CAAC,CAAC,CACd;EACD,MAAMyB,UAAU,GAAGvE,OAAO,CAAC6E,aAAa,EAAE;EAC1C;EACA,MAAMP,OAAO,GAAG;IAACjE,IAAI,EAAEA;EAAI,CAAC;EAC5BiE,OAAO,CAAC,YAAY,CAAC,GAAGC,UAAU;EAClC,MAAMvB,QAAQ,GAAGhD,OAAO,CAACiD,WAAW,EAAE;EACtC,IAAID,QAAQ,CAACE,OAAO,EAAE,IAAI,iBAAiB,EAAE;IAC3C,MAAM+B,eAAe,GAAG;IACtBzG,4BAA4B,CAACwE,QAAQ,EAAE,IAAI,EAAEzD,OAAO,CACrD;IACDgF,UAAU,CAAC,QAAQ,CAAC,GAAGU,eAAe,CAACC,cAAc,EAAE;EACzD;EACA,MAAM/B,UAAU,GAAGL,WAAW,CAACA,WAAW,CAAC/C,MAAM,GAAG,CAAC,CAAC,CAACM,IAAI;EAC3D,MAAMuE,WAAW,GAAGvC,YAAY,CAACc,UAAU,CAAC5C,YAAY,CAAC;EACzD,MAAMgD,MAAM,GAAG/F,YAAY,CAAC+G,UAAU,EAAEK,WAAW,CAAC;EACpD/G,mBAAmB,CACjByG,OAAO,EACPhC,eAAe,EACfrF,4BAA4B,EAC5BsG,MAAM,EACNT,WAAW,EACX8B,WAAW,CACZ;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASrC,WAAW,CAAClC,IAAI,EAAEyE,UAAU,EAAEhC,WAAW,EAAE;EAClD;EACA,MAAMwB,OAAO,GAAG;IAACjE,IAAI,EAAEA;EAAI,CAAC;EAC5BiE,OAAO,CAAC,gBAAgB,CAAC,GAAGQ,UAAU,CAACC,SAAS,EAAE;EAClDT,OAAO,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;EAC1BzG,mBAAmB,CACjByG,OAAO,EACP7B,kBAAkB,EAClBD,mBAAmB,EACnBsC,UAAU,CAACE,cAAc,EAAE,EAC3BlC,WAAW,CACZ;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS1D,QAAQ,CAACiB,IAAI,EAAEL,OAAO,EAAE8C,WAAW,EAAE;EAC5C,MAAMvD,OAAO,GAAG;EACduD,WAAW,CAAC,CAAC,CACd;EACD,MAAMwB,OAAO,GAAGxB,WAAW,CAACA,WAAW,CAAC/C,MAAM,GAAG,CAAC,CAAC;EACnDuE,OAAO,CAAC,YAAY,CAAC,GAAGtE,OAAO,CAAC6E,aAAa,EAAE;EAC/C,MAAM7B,QAAQ,GAAGhD,OAAO,CAACiD,WAAW,EAAE;EACtC,IAAID,QAAQ,CAACE,OAAO,EAAE,IAAI,OAAO,EAAE;IACjC,MAAMiC,KAAK,GAAG;IACZ3G,4BAA4B,CAACwE,QAAQ,EAAE,IAAI,EAAEzD,OAAO,CACrD;IACD+E,OAAO,CAAC,gBAAgB,CAAC,GAAGa,KAAK,CAACJ,SAAS,EAAE;IAC7C5C,YAAY,CAAC9B,IAAI,EAAE8E,KAAK,CAACH,cAAc,EAAE,EAAElC,WAAW,CAAC;EACzD;AACF;AAEA,eAAezD,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}